#ifndef PATTERNDEF_H
#define PATTERNDEF_H

//GRADIENT PALETTE FOR SR-FFT & TRAILDOWN
DEFINE_GRADIENT_PALETTE( purple_gp ) {
  0,   0, 212, 255,   //blue
255, 179,   0, 255 }; //purple
CRGBPalette16 purplePal = purple_gp;

DEFINE_GRADIENT_PALETTE( outrun_gp ) {
  0, 141,   0, 100,   //purple
127, 255, 192,   0,   //yellow
255,   0,   5, 255 };  //blue
CRGBPalette16 outrunPal = outrun_gp;

DEFINE_GRADIENT_PALETTE( redyellow_gp ) {
  0,   200, 200,  200,   //white
 64,   255, 218,    0,   //yellow
128,   231,   0,    0,   //red
192,   255, 218,    0,   //yellow
255,   200, 200,  200 }; //white
CRGBPalette16 heatPal = redyellow_gp;
 
DEFINE_GRADIENT_PALETTE( nfirePal ) {    // define fire palette
   0,    0,   0,   0,   // black
  32,  255,   0,   0,   // red
  190, 255, 255,   0,   // yellow
  255, 255, 255, 255    // white
};
CRGBPalette16 gNFirePal = nfirePal;

uint32_t trailColors[2] = 
{
    0x1B8227,
    0xAFFFAF
};

uint32_t trailColorsRef[2] = 
{
    0x1B8227,
    0xAFFFAF
};


// START SOFTTWINKLES DEFS //
#define STW_DENSITY     80
const CRGB stwLightcolor(8,7,1);
// EOF SOFTTWINKLES DEFS //

////// kerosene palettes /////////////
DEFINE_GRADIENT_PALETTE( Kbarberpole1_gp ) {
    0, 255,  4,  2,
   40, 255,  4,  2,
   40, 255, 34, 26,
   61, 255, 34, 26,
   61, 255, 66, 54,
   75, 255, 66, 54,
   75, 255, 92, 80,
   85, 255, 92, 80,
   85, 255,115,103,
   92, 255,115,103,
   92, 255,135,123,
   98, 255,135,123,
   98, 255,154,144,
  103, 255,154,144,
  103, 255,169,160,
  108, 255,169,160,
  108, 255,186,178,
  112, 255,186,178,
  112, 255,201,194,
  116, 255,201,194,
  116, 255,217,212,
  120, 255,217,212,
  120, 255,231,228,
  123, 255,231,228,
  123, 255,246,245,
  127, 255,246,245,
  127, 255,255,255,
  127, 255,255,255,
  127, 247,248,255,
  130, 247,248,255,
  130, 229,233,255,
  134, 229,233,255,
  134, 210,217,255,
  138, 210,217,255,
  138, 194,203,255,
  142, 194,203,255,
  142, 177,187,255,
  146, 177,187,255,
  146, 159,171,255,
  150, 159,171,255,
  150, 140,154,255,
  156, 140,154,255,
  156, 121,136,255,
  162, 121,136,255,
  162, 100,115,255,
  169, 100,115,255,
  169,  77, 92,255,
  179,  77, 92,255,
  179,  50, 65,255,
  193,  50, 65,255,
  193,  23, 33,255,
  214,  23, 33,255,
  214,   2,  4,255,
  255,   2,  4,255};

DEFINE_GRADIENT_PALETTE( KloversColors_gp ) {
    0, 222, 10,  7,
   51, 222, 10,  7,
   51, 255, 71, 21,
  102, 255, 71, 21,
  102, 242,173, 47,
  153, 242,173, 47,
  153, 184,233, 91,
  204, 184,233, 91,
  204,  39,182,137,
  255,  39,182,137};

DEFINE_GRADIENT_PALETTE( KopaqueColors_gp ) {
    0, 192,203,112,
   51, 192,203,112,
   51, 132,169,112,
  102, 132,169,112,
  102,  27, 99, 83,
  153,  27, 99, 83,
  153,  46, 36, 28,
  204,  46, 36, 28,
  204,  71,  7, 19,
  255,  71,  7, 19};

DEFINE_GRADIENT_PALETTE( KtempColors_gp ) {
    0,   1, 27,105,
   14,   1, 27,105,
   14,   1, 40,127,
   28,   1, 40,127,
   28,   1, 70,168,
   42,   1, 70,168,
   42,   1, 92,197,
   56,   1, 92,197,
   56,   1,119,221,
   70,   1,119,221,
   70,   3,130,151,
   84,   3,130,151,
   84,  23,156,149,
   99,  23,156,149,
   99,  67,182,112,
  113,  67,182,112,
  113, 121,201, 52,
  127, 121,201, 52,
  127, 142,203, 11,
  141, 142,203, 11,
  141, 224,223,  1,
  155, 224,223,  1,
  155, 252,187,  2,
  170, 252,187,  2,
  170, 247,147,  1,
  184, 247,147,  1,
  184, 237, 87,  1,
  198, 237, 87,  1,
  198, 229, 43,  1,
  212, 229, 43,  1,
  212, 220, 15,  1,
  226, 220, 15,  1,
  226, 171,  2,  2,
  240, 171,  2,  2,
  240,  80,  3,  3,
  255,  80,  3,  3};

DEFINE_GRADIENT_PALETTE( KrecliningColors_gp ) {
    0,   6, 45, 16,
   51,   6, 45, 16,
   51, 135,201,108,
  102, 135,201,108,
  102, 227,221,151,
  153, 227,221,151,
  153,  83,182,186,
  204,  83,182,186,
  204, 159,127,178,
  255, 159,127,178};

DEFINE_GRADIENT_PALETTE( Krgb1Colors_gp ) {
    0,   0,  0,  0,
   84,  10, 17,255,
   84,   0, 17,  0,
  169,  10,255, 12,
  169,  10,  0,  0,
  255, 255, 17, 12};

DEFINE_GRADIENT_PALETTE( Kpair11Colors_gp ) {
    0,  83,159,190,
   23,  83,159,190,
   23,   1, 48,106,
   46,   1, 48,106,
   46, 100,189, 54,
   69, 100,189, 54,
   69,   3, 91,  3,
   92,   3, 91,  3,
   92, 244, 84, 71,
  115, 244, 84, 71,
  115, 188,  1,  1,
  139, 188,  1,  1,
  139, 249,135, 31,
  162, 249,135, 31,
  162, 255, 55,  0,
  185, 255, 55,  0,
  185, 139,115,164,
  208, 139,115,164,
  208,  26, 10, 72,
  231,  26, 10, 72,
  231, 255,255, 71,
  255, 255,255, 71};

DEFINE_GRADIENT_PALETTE( Ki8Colors_gp ) {
    0,   0,  0,  0,
   31,   0,  0,  0,
   31,   0,255,  0,
   63,   0,255,  0,
   63,   0,  0,255,
   95,   0,  0,255,
   95,   0,255,255,
  127,   0,255,255,
  127, 255,  0,  0,
  159, 255,  0,  0,
  159, 255,255,  0,
  191, 255,255,  0,
  191, 255,  0,255,
  223, 255,  0,255,
  223, 255,255,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( Kfroth316Colors_gp ) {
    0, 247,  0,  0,
   17, 247,  0,  0,
   17, 157,  0,  0,
   33, 157,  0,  0,
   33,  86,  0,  0,
   51,  86,  0,  0,
   51,  39,  0,  0,
   68,  39,  0,  0,
   68,  12,  0,  0,
   84,  12,  0,  0,
   84,   0,248,  0,
  102,   0,248,  0,
  102,   0,169,  0,
  119,   0,169,  0,
  119,   0,101,  0,
  135,   0,101,  0,
  135,   0, 52,  0,
  153,   0, 52,  0,
  153,   0, 19,  0,
  170,   0, 19,  0,
  170,   0,  0,247,
  186,   0,  0,247,
  186,   0,  0,160,
  204,   0,  0,160,
  204,   0,  0, 89,
  221,   0,  0, 89,
  221,   0,  0, 42,
  237,   0,  0, 42,
  237,   0,  0, 14,
  255,   0,  0, 14};

DEFINE_GRADIENT_PALETTE( Kshikon22Colors_gp ) {
    0,   2,  2,  2,
   24, 217, 47,  0,
   26,   2,  2,  2,
   49, 126,  0,  1,
   51,   2,  2,  2,
   73,   0,223, 64,
   76,   2,  2,  2,
  100, 126,  0, 59,
  102,   2,  2,  2,
  125,   0,219,219,
  127,   2,  2,  2,
  151,   0, 25,219,
  153,   2,  2,  2,
  175,  44,223,  0,
  179,   2,  2,  2,
  201,  55,  2, 32,
  203,   2,  2,  2,
  226, 199,223,  0,
  229,   2,  2,  2,
  252,  26,  0,219,
  255,   2,  2,  2};

DEFINE_GRADIENT_PALETTE( Kshikon23Colors_gp ) {
    0,   2,  2,  2,
    8,   2,  2,  2,
   10, 126,  0,  1,
   24, 126,  0,  1,
   25,   2,  2,  2,
   37,   2,  2,  2,
   38, 199,223,  0,
   49, 199,223,  0,
   50,   2,  2,  2,
   63,   2,  2,  2,
   65,  44,223,  0,
   77,  44,223,  0,
   77,   2,  2,  2,
   88,   2,  2,  2,
   89,   0,223, 64,
  101,   0,223, 64,
  102,   2,  2,  2,
  113,   2,  2,  2,
  114,   0,219,219,
  128,   0,219,219,
  129,   2,  2,  2,
  140,   2,  2,  2,
  141,   0, 25,219,
  153,   0, 25,219,
  153,   2,  2,  2,
  165,   2,  2,  2,
  166, 126,  0, 59,
  178, 126,  0, 59,
  179,   2,  2,  2,
  191,   2,  2,  2,
  192,  55,  2, 32,
  204,  55,  2, 32,
  205,   2,  2,  2,
  216,   2,  2,  2,
  217, 217, 47,  0,
  228, 217, 47,  0,
  228,   2,  2,  2,
  242,   2,  2,  2,
  243,  26,  0,219,
  250,  26,  0,219,
  255,   2,  2,  2};

DEFINE_GRADIENT_PALETTE( KhaxbyColors_gp ) {
    0,   1,  0, 39,
    7,   1,  0, 39,
    7,   2,  0, 67,
   15,   2,  0, 67,
   15,   1,  1, 99,
   23,   1,  1, 99,
   23,   0,  1,138,
   31,   0,  1,138,
   31,   0,  1,160,
   39,   0,  1,160,
   39,   0,  4,184,
   47,   0,  4,184,
   47,   1, 33,219,
   55,   1, 33,219,
   55,   1, 56,237,
   63,   1, 56,237,
   63,   1,111,255,
   71,   1,111,255,
   71,   3,133,255,
   79,   3,133,255,
   79,   8,152,255,
   87,   8,152,255,
   87,  20,193,219,
   95,  20,193,219,
   95,  26,213,186,
  103,  26,213,186,
  103,  39,213,138,
  111,  39,213,138,
  111,  51,215, 98,
  119,  51,215, 98,
  119,  91,233, 89,
  127,  91,233, 89,
  127, 144,255, 82,
  135, 144,255, 82,
  135, 179,233, 57,
  143, 179,233, 57,
  143, 217,215, 39,
  151, 217,215, 39,
  151, 234,175, 27,
  159, 234,175, 27,
  159, 255,131, 17,
  167, 255,131, 17,
  167, 255, 91,  9,
  175, 255, 91,  9,
  175, 227, 45, 11,
  183, 227, 45, 11,
  183, 213, 19, 13,
  191, 213, 19, 13,
  191, 255, 25, 18,
  199, 255, 25, 18,
  199, 255, 52, 42,
  207, 255, 52, 42,
  207, 255, 88, 77,
  215, 255, 88, 77,
  215, 229,117, 98,
  223, 229,117, 98,
  223, 255,142,132,
  231, 255,142,132,
  231, 255,175,166,
  239, 255,175,166,
  239, 255,213,207,
  247, 255,213,207,
  247, 255,255,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( Kredgrey11Colors_gp ) {
    0,  24,  0,  1,
   23,  24,  0,  1,
   23, 100,  1,  2,
   46, 100,  1,  2,
   46, 161, 29, 12,
   69, 161, 29, 12,
   69, 227, 97, 47,
   92, 227, 97, 47,
   92, 249,182,137,
  115, 249,182,137,
  115, 255,255,255,
  139, 255,255,255,
  139, 182,191,184,
  162, 182,191,184,
  162, 112,127,115,
  185, 112,127,115,
  185,  48, 62, 52,
  208,  48, 62, 52,
  208,  11, 18, 12,
  231,  11, 18, 12,
  231,   1,  1,  1,
  255,   1,  1,  1};

DEFINE_GRADIENT_PALETTE( Kprecip217Colors_gp ) {
    0, 255,255,255,
   14, 255,255,255,
   14, 206,235,255,
   28, 206,235,255,
   28, 161,195,255,
   42, 161,195,255,
   42, 104,151,255,
   56, 104,151,255,
   56,  55,115,255,
   70,  55,115,255,
   70,  41, 79,255,
   84,  41, 79,255,
   84,  31, 60,237,
   99,  31, 60,237,
   99,  21, 41,237,
  113,  21, 41,237,
  113,   0, 88,  1,
  127,   0, 88,  1,
  127,   5,130,  7,
  141,   5,130,  7,
  141, 101,164, 31,
  155, 101,164, 31,
  155, 110,241, 31,
  170, 110,241, 31,
  170, 255,241,  1,
  184, 255,241,  1,
  184, 255, 95,  1,
  198, 255, 95,  1,
  198, 192,  0,  0,
  212, 192,  0,  0,
  212, 117,  0,  0,
  226, 117,  0,  0,
  226,  43,  0,  0,
  240,  43,  0,  0,
  240,   0,  0,  0,
  255,   0,  0,  0};

DEFINE_GRADIENT_PALETTE( KdkblueredColors_gp ) {
    0,   1,  0,  4,
    8,   1,  0, 13,
   17,   1,  0, 29,
   25,   1,  0, 52,
   33,   1,  0, 83,
   42,   1,  0,123,
   51,   1,  0,174,
   59,   1,  0,235,
   68,   1,  2,255,
   76,   4, 17,255,
   84,  16, 45,255,
   93,  37, 82,255,
  102,  69,127,255,
  110, 120,168,255,
  119, 182,217,255,
  127, 255,255,255,
  135, 255,217,184,
  144, 255,168,123,
  153, 255,127, 73,
  161, 255, 82, 40,
  170, 255, 45, 18,
  178, 255, 17,  5,
  186, 255,  2,  1,
  195, 234,  0,  1,
  204, 171,  0,  1,
  212, 120,  0,  1,
  221,  79,  0,  1,
  229,  48,  0,  1,
  237,  26,  0,  1,
  246,  12,  0,  1,
  255,   4,  0,  1};

DEFINE_GRADIENT_PALETTE( KoldflagColors_gp ) {
    0,   1,  2,105,
   94,   1,  2,105,
   99, 199,  1,  7,
  104, 199,  1,  7,
  109, 255,255,255,
  117, 255,255,255,
  122, 199,  1,  7,
  124, 199,  1,  7,
  130, 255,255,255,
  137, 255,255,255,
  145, 199,  1,  7,
  150, 199,  1,  7,
  155, 255,255,255,
  160, 255,255,255,
  165, 199,  1,  7,
  170, 199,  1,  7,
  175, 255,255,255,
  181, 255,255,255,
  188, 199,  1,  7,
  191, 199,  1,  7,
  198, 255,255,255,
  204, 255,255,255,
  209, 199,  1,  7,
  211, 199,  1,  7,
  219, 255,255,255,
  224, 255,255,255,
  229, 199,  1,  7,
  234, 199,  1,  7,
  239, 255,255,255,
  244, 255,255,255,
  249, 199,  1,  7,
  255, 199,  1,  7};

DEFINE_GRADIENT_PALETTE( KxmascandyColors_gp ) {
    0, 255,255,255,
   25, 255,  0,  0,
   51, 255,255,255,
   76,   0, 55,  0,
  102, 255,255,255,
  127, 255,  0,  0,
  153, 255,255,255,
  178,   0, 55,  0,
  204, 255,255,255,
  229, 255,  0,  0,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( KrainfallColors_gp ) {
    0, 192,118,  3,
   36, 192,118,  3,
   36, 222,118, 24,
   72, 222,118, 24,
   72, 224,209, 37,
  109, 224,209, 37,
  109,  58,159, 43,
  145,  58,159, 43,
  145,   7,133, 52,
  182,   7,133, 52,
  182,   4,118, 50,
  218,   4,118, 50,
  218,   1, 85,  8,
  255,   1, 85,  8};

DEFINE_GRADIENT_PALETTE( KqventColors_gp ) {
    0,   0,  0,  0,
   25,  42, 55, 45,
   25, 255,255,255,
   51,  42, 55, 45,
   51,   0,  0,  0,
   76,  42, 55, 45,
   76, 255,255,255,
  101,  42, 55, 45,
  101,   0,  0,  0,
  127,  42, 55, 45,
  127, 255,255,255,
  153,  42, 55, 45,
  153,   0,  0,  0,
  178,  42, 55, 45,
  178, 255,255,255,
  204,  42, 55, 45,
  204,   0,  0,  0,
  229,  42, 55, 45,
  229, 255,255,255,
  255,  42, 55, 45};

DEFINE_GRADIENT_PALETTE( Kib_jul01_gp ) {
    0, 194,  1,  1,
   94,   1, 29, 18,
  132,  57,131, 28,
  255, 113,  1,  1};

DEFINE_GRADIENT_PALETTE( Kes_vintage_57_gp ) {
    0,   2,  1,  1,
   53,  18,  1,  0,
  104,  69, 29,  1,
  153, 167,135, 10,
  255,  46, 56,  4};

DEFINE_GRADIENT_PALETTE( Kes_vintage_01_gp ) {
    0,   4,  1,  1,
   51,  16,  0,  1,
   76,  97,104,  3,
  101, 255,131, 19,
  127,  67,  9,  4,
  153,  16,  0,  1,
  229,   4,  1,  1,
  255,   4,  1,  1};

DEFINE_GRADIENT_PALETTE( Kes_rivendell_15_gp ) {
    0,   1, 14,  5,
  101,  16, 36, 14,
  165,  56, 68, 30,
  242, 150,156, 99,
  255, 150,156, 99};

DEFINE_GRADIENT_PALETTE( Krgi_15_gp ) {
    0,   4,  1, 31,
   31,  55,  1, 16,
   63, 197,  3,  7,
   95,  59,  2, 17,
  127,   6,  2, 34,
  159,  39,  6, 33,
  191, 112, 13, 32,
  223,  56,  9, 35,
  255,  22,  6, 38};

DEFINE_GRADIENT_PALETTE( Kretro2_16_gp ) {
    0, 188,135,  1,
  255,  46,  7,  1};

DEFINE_GRADIENT_PALETTE( KAnalogous_1_gp ) {
    0,   3,  0,255,
   63,  23,  0,255,
  127,  67,  0,255,
  191, 142,  0, 45,
  255, 255,  0,  0};

DEFINE_GRADIENT_PALETTE( Kes_pinksplash_08_gp ) {
    0, 126, 11,255,
  127, 197,  1, 22,
  175, 210,157,172,
  221, 157,  3,112,
  255, 157,  3,112};

DEFINE_GRADIENT_PALETTE( Kes_pinksplash_07_gp ) {
    0, 229,  1,  1,
   61, 242,  4, 63,
  101, 255, 12,255,
  127, 249, 81,252,
  153, 255, 11,235,
  193, 244,  5, 68,
  255, 232,  1,  5};

DEFINE_GRADIENT_PALETTE( KCoral_reef_gp ) {
    0,  40,199,197,
   50,  10,152,155,
   96,   1,111,120,
   96,  43,127,162,
  139,  10, 73,111,
  255,   1, 34, 71};

DEFINE_GRADIENT_PALETTE( Kes_ocean_breeze_068_gp ) {
    0, 100,156,153,
   51,   1, 99,137,
  101,   1, 68, 84,
  104,  35,142,168,
  178,   0, 63,117,
  255,   1, 10, 10};

DEFINE_GRADIENT_PALETTE( Kes_ocean_breeze_036_gp ) {
    0,   1,  6,  7,
   89,   1, 99,111,
  153, 144,209,255,
  255,   0, 73, 82};

DEFINE_GRADIENT_PALETTE( Kdeparture_gp ) {
    0,   8,  3,  0,
   42,  23,  7,  0,
   63,  75, 38,  6,
   84, 169, 99, 38,
  106, 213,169,119,
  116, 255,255,255,
  138, 135,255,138,
  148,  22,255, 24,
  170,   0,255,  0,
  191,   0,136,  0,
  212,   0, 55,  0,
  255,   0, 55,  0};

DEFINE_GRADIENT_PALETTE( Kes_landscape_64_gp ) {
    0,   0,  0,  0,
   37,   2, 25,  1,
   76,  15,115,  5,
  127,  79,213,  1,
  128, 126,211, 47,
  130, 188,209,247,
  153, 144,182,205,
  204,  59,117,250,
  255,   1, 37,192};

DEFINE_GRADIENT_PALETTE( Kes_landscape_33_gp ) {
    0,   1,  5,  0,
   19,  32, 23,  1,
   38, 161, 55,  1,
   63, 229,144,  1,
   66,  39,142, 74,
  255,   1,  4,  1};

DEFINE_GRADIENT_PALETTE( Krainbowsherbet_gp ) {
    0, 255, 33,  4,
   43, 255, 68, 25,
   86, 255,  7, 25,
  127, 255, 82,103,
  170, 255,255,242,
  209,  42,255, 22,
  255,  87,255, 65};

DEFINE_GRADIENT_PALETTE( Kgr65_hult_gp ) {
    0, 247,176,247,
   48, 255,136,255,
   89, 220, 29,226,
  160,   7, 82,178,
  216,   1,124,109,
  255,   1,124,109};

DEFINE_GRADIENT_PALETTE( Kgr64_hult_gp ) {
    0,   1,124,109,
   66,   1, 93, 79,
  104,  52, 65,  1,
  130, 115,127,  1,
  150,  52, 65,  1,
  201,   1, 86, 72,
  239,   0, 55, 45,
  255,   0, 55, 45};

DEFINE_GRADIENT_PALETTE( KGMT_drywet_gp ) {
    0,  47, 30,  2,
   42, 213,147, 24,
   84, 103,219, 52,
  127,   3,219,207,
  170,   1, 48,214,
  212,   1,  1,111,
  255,   1,  7, 33};

DEFINE_GRADIENT_PALETTE( Kib15_gp ) {
    0, 113, 91,147,
   72, 157, 88, 78,
   89, 208, 85, 33,
  107, 255, 29, 11,
  141, 137, 31, 39,
  255,  59, 33, 89};

DEFINE_GRADIENT_PALETTE( KFuschia_7_gp ) {
    0,  43,  3,153,
   63, 100,  4,103,
  127, 188,  5, 66,
  191, 161, 11,115,
  255, 135, 20,182};

DEFINE_GRADIENT_PALETTE( Kes_emerald_dragon_08_gp ) {
    0,  97,255,  1,
  101,  47,133,  1,
  178,  13, 43,  1,
  255,   2, 10,  1};

DEFINE_GRADIENT_PALETTE( Klava_gp ) {
    0,   0,  0,  0,
   46,  18,  0,  0,
   96, 113,  0,  0,
  108, 142,  3,  1,
  119, 175, 17,  1,
  146, 213, 44,  2,
  174, 255, 82,  4,
  188, 255,115,  4,
  202, 255,156,  4,
  218, 255,203,  4,
  234, 255,255,  4,
  244, 255,255, 71,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( Kfire_gp ) {
    0,   1,  1,  0,
   76,  32,  5,  0,
  146, 192, 24,  0,
  197, 220,105,  5,
  240, 252,255, 31,
  250, 252,255,111,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( KColorfull_gp ) {
    0,  10, 85,  5,
   25,  29,109, 18,
   60,  59,138, 42,
   93,  83, 99, 52,
  106, 110, 66, 64,
  109, 123, 49, 65,
  113, 139, 35, 66,
  116, 192,117, 98,
  124, 255,255,137,
  168, 100,180,155,
  255,  22,121,174};

DEFINE_GRADIENT_PALETTE( KMagenta_Evening_gp ) {
    0,  71, 27, 39,
   31, 130, 11, 51,
   63, 213,  2, 64,
   70, 232,  1, 66,
   76, 252,  1, 69,
  108, 123,  2, 51,
  255,  46,  9, 35};

DEFINE_GRADIENT_PALETTE( KPink_Purple_gp ) {
    0,  19,  2, 39,
   25,  26,  4, 45,
   51,  33,  6, 52,
   76,  68, 62,125,
  102, 118,187,240,
  109, 163,215,247,
  114, 217,244,255,
  122, 159,149,221,
  149, 113, 78,188,
  183, 128, 57,155,
  255, 146, 40,123};

DEFINE_GRADIENT_PALETTE( KSunset_Real_gp ) {
    0, 120,  0,  0,
   22, 179, 22,  0,
   51, 255,104,  0,
   85, 167, 22, 18,
  135, 100,  0,103,
  198,  16,  0,130,
  255,   0,  0,160};

DEFINE_GRADIENT_PALETTE( Kes_autumn_19_gp ) {
    0,  26,  1,  1,
   51,  67,  4,  1,
   84, 118, 14,  1,
  104, 137,152, 52,
  112, 113, 65,  1,
  122, 133,149, 59,
  124, 137,152, 52,
  135, 113, 65,  1,
  142, 139,154, 46,
  163, 113, 13,  1,
  204,  55,  3,  1,
  249,  17,  1,  1,
  255,  17,  1,  1};

DEFINE_GRADIENT_PALETTE( KBlacK_Blue_Magenta_White_gp ) {
    0,   0,  0,  0,
   42,   0,  0, 45,
   84,   0,  0,255,
  127,  42,  0,255,
  170, 255,  0,255,
  212, 255, 55,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( KBlacK_Magenta_Red_gp ) {
    0,   0,  0,  0,
   63,  42,  0, 45,
  127, 255,  0,255,
  191, 255,  0, 45,
  255, 255,  0,  0};

DEFINE_GRADIENT_PALETTE( KBlacK_Red_Magenta_Yellow_gp ) {
    0,   0,  0,  0,
   42,  42,  0,  0,
   84, 255,  0,  0,
  127, 255,  0, 45,
  170, 255,  0,255,
  212, 255, 55, 45,
  255, 255,255,  0};

DEFINE_GRADIENT_PALETTE( KBlue_Cyan_Yellow_gp ) {
    0,   0,  0,255,
   63,   0, 55,255,
  127,   0,255,255,
  191,  42,255, 45,
  255, 255,255,  0};

const TProgmemRGBGradientPalettePtr keroseneGradientPalettes[] = {
  Kbarberpole1_gp,
  KloversColors_gp,
  KopaqueColors_gp,
  KtempColors_gp,
  KrecliningColors_gp,
  Krgb1Colors_gp,
  Kpair11Colors_gp,
  Ki8Colors_gp,
  Kfroth316Colors_gp,
  Kshikon22Colors_gp,
  Kshikon23Colors_gp,
  KhaxbyColors_gp,
  Kredgrey11Colors_gp,
  Kprecip217Colors_gp,
  KdkblueredColors_gp,
  KoldflagColors_gp,
  KxmascandyColors_gp,
  KrainfallColors_gp,
  KqventColors_gp,
  KSunset_Real_gp,
  Kes_rivendell_15_gp,
  Kes_ocean_breeze_036_gp,
  Krgi_15_gp,
  Kretro2_16_gp,
  KAnalogous_1_gp,
  Kes_pinksplash_08_gp,
  KCoral_reef_gp,
  Kes_ocean_breeze_068_gp,
  Kes_pinksplash_07_gp,
  Kes_vintage_01_gp,
  Kdeparture_gp,
  Kes_landscape_64_gp,
  Kes_landscape_33_gp,
  Krainbowsherbet_gp,
  Kgr65_hult_gp,
  Kgr64_hult_gp,
  KGMT_drywet_gp,
  Kib_jul01_gp,
  Kes_vintage_57_gp,
  Kib15_gp,
  KFuschia_7_gp,
  Kes_emerald_dragon_08_gp,
  Klava_gp,
  Kfire_gp,
  KColorfull_gp,
  KMagenta_Evening_gp,
  KPink_Purple_gp,
  Kes_autumn_19_gp,
  KBlacK_Blue_Magenta_White_gp,
  KBlacK_Magenta_Red_gp,
  KBlacK_Red_Magenta_Yellow_gp,
  KBlue_Cyan_Yellow_gp };

// Count of how many cpt-city gradients are defined:
const uint8_t keroseneGradientPaletteCount = 
  sizeof( keroseneGradientPalettes) / sizeof( TProgmemRGBGradientPalettePtr );
// EOF kerosene palette //


////// colorwaves palettes /////////////
DEFINE_GRADIENT_PALETTE( cwbarberpole1_gp ) {
    0, 255,  4,  2,
   40, 255,  4,  2,
   40, 255, 34, 26,
   61, 255, 34, 26,
   61, 255, 66, 54,
   75, 255, 66, 54,
   75, 255, 92, 80,
   85, 255, 92, 80,
   85, 255,115,103,
   92, 255,115,103,
   92, 255,135,123,
   98, 255,135,123,
   98, 255,154,144,
  103, 255,154,144,
  103, 255,169,160,
  108, 255,169,160,
  108, 255,186,178,
  112, 255,186,178,
  112, 255,201,194,
  116, 255,201,194,
  116, 255,217,212,
  120, 255,217,212,
  120, 255,231,228,
  123, 255,231,228,
  123, 255,246,245,
  127, 255,246,245,
  127, 255,255,255,
  127, 255,255,255,
  127, 247,248,255,
  130, 247,248,255,
  130, 229,233,255,
  134, 229,233,255,
  134, 210,217,255,
  138, 210,217,255,
  138, 194,203,255,
  142, 194,203,255,
  142, 177,187,255,
  146, 177,187,255,
  146, 159,171,255,
  150, 159,171,255,
  150, 140,154,255,
  156, 140,154,255,
  156, 121,136,255,
  162, 121,136,255,
  162, 100,115,255,
  169, 100,115,255,
  169,  77, 92,255,
  179,  77, 92,255,
  179,  50, 65,255,
  193,  50, 65,255,
  193,  23, 33,255,
  214,  23, 33,255,
  214,   2,  4,255,
  255,   2,  4,255};

DEFINE_GRADIENT_PALETTE( cwloversColors_gp ) {
    0, 222, 10,  7,
   51, 222, 10,  7,
   51, 255, 71, 21,
  102, 255, 71, 21,
  102, 242,173, 47,
  153, 242,173, 47,
  153, 184,233, 91,
  204, 184,233, 91,
  204,  39,182,137,
  255,  39,182,137};

DEFINE_GRADIENT_PALETTE( cwopaqueColors_gp ) {
    0, 192,203,112,
   51, 192,203,112,
   51, 132,169,112,
  102, 132,169,112,
  102,  27, 99, 83,
  153,  27, 99, 83,
  153,  46, 36, 28,
  204,  46, 36, 28,
  204,  71,  7, 19,
  255,  71,  7, 19};

DEFINE_GRADIENT_PALETTE( cwtempColors_gp ) {
    0,   1, 27,105,
   14,   1, 27,105,
   14,   1, 40,127,
   28,   1, 40,127,
   28,   1, 70,168,
   42,   1, 70,168,
   42,   1, 92,197,
   56,   1, 92,197,
   56,   1,119,221,
   70,   1,119,221,
   70,   3,130,151,
   84,   3,130,151,
   84,  23,156,149,
   99,  23,156,149,
   99,  67,182,112,
  113,  67,182,112,
  113, 121,201, 52,
  127, 121,201, 52,
  127, 142,203, 11,
  141, 142,203, 11,
  141, 224,223,  1,
  155, 224,223,  1,
  155, 252,187,  2,
  170, 252,187,  2,
  170, 247,147,  1,
  184, 247,147,  1,
  184, 237, 87,  1,
  198, 237, 87,  1,
  198, 229, 43,  1,
  212, 229, 43,  1,
  212, 220, 15,  1,
  226, 220, 15,  1,
  226, 171,  2,  2,
  240, 171,  2,  2,
  240,  80,  3,  3,
  255,  80,  3,  3};

DEFINE_GRADIENT_PALETTE( cwrecliningColors_gp ) {
    0,   6, 45, 16,
   51,   6, 45, 16,
   51, 135,201,108,
  102, 135,201,108,
  102, 227,221,151,
  153, 227,221,151,
  153,  83,182,186,
  204,  83,182,186,
  204, 159,127,178,
  255, 159,127,178};

DEFINE_GRADIENT_PALETTE( cwrgb1Colors_gp ) {
    0,   0,  0,  0,
   84,  10, 17,255,
   84,   0, 17,  0,
  169,  10,255, 12,
  169,  10,  0,  0,
  255, 255, 17, 12};

DEFINE_GRADIENT_PALETTE( cwpair11Colors_gp ) {
    0,  83,159,190,
   23,  83,159,190,
   23,   1, 48,106,
   46,   1, 48,106,
   46, 100,189, 54,
   69, 100,189, 54,
   69,   3, 91,  3,
   92,   3, 91,  3,
   92, 244, 84, 71,
  115, 244, 84, 71,
  115, 188,  1,  1,
  139, 188,  1,  1,
  139, 249,135, 31,
  162, 249,135, 31,
  162, 255, 55,  0,
  185, 255, 55,  0,
  185, 139,115,164,
  208, 139,115,164,
  208,  26, 10, 72,
  231,  26, 10, 72,
  231, 255,255, 71,
  255, 255,255, 71};

DEFINE_GRADIENT_PALETTE( cwi8Colors_gp ) {
    0,   0,  0,  0,
   31,   0,  0,  0,
   31,   0,255,  0,
   63,   0,255,  0,
   63,   0,  0,255,
   95,   0,  0,255,
   95,   0,255,255,
  127,   0,255,255,
  127, 255,  0,  0,
  159, 255,  0,  0,
  159, 255,255,  0,
  191, 255,255,  0,
  191, 255,  0,255,
  223, 255,  0,255,
  223, 255,255,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( cwfroth316Colors_gp ) {
    0, 247,  0,  0,
   17, 247,  0,  0,
   17, 157,  0,  0,
   33, 157,  0,  0,
   33,  86,  0,  0,
   51,  86,  0,  0,
   51,  39,  0,  0,
   68,  39,  0,  0,
   68,  12,  0,  0,
   84,  12,  0,  0,
   84,   0,248,  0,
  102,   0,248,  0,
  102,   0,169,  0,
  119,   0,169,  0,
  119,   0,101,  0,
  135,   0,101,  0,
  135,   0, 52,  0,
  153,   0, 52,  0,
  153,   0, 19,  0,
  170,   0, 19,  0,
  170,   0,  0,247,
  186,   0,  0,247,
  186,   0,  0,160,
  204,   0,  0,160,
  204,   0,  0, 89,
  221,   0,  0, 89,
  221,   0,  0, 42,
  237,   0,  0, 42,
  237,   0,  0, 14,
  255,   0,  0, 14};

DEFINE_GRADIENT_PALETTE( cwshikon22Colors_gp ) {
    0,   2,  2,  2,
   24, 217, 47,  0,
   26,   2,  2,  2,
   49, 126,  0,  1,
   51,   2,  2,  2,
   73,   0,223, 64,
   76,   2,  2,  2,
  100, 126,  0, 59,
  102,   2,  2,  2,
  125,   0,219,219,
  127,   2,  2,  2,
  151,   0, 25,219,
  153,   2,  2,  2,
  175,  44,223,  0,
  179,   2,  2,  2,
  201,  55,  2, 32,
  203,   2,  2,  2,
  226, 199,223,  0,
  229,   2,  2,  2,
  252,  26,  0,219,
  255,   2,  2,  2};

DEFINE_GRADIENT_PALETTE( cwshikon23Colors_gp ) {
    0,   2,  2,  2,
    8,   2,  2,  2,
   10, 126,  0,  1,
   24, 126,  0,  1,
   25,   2,  2,  2,
   37,   2,  2,  2,
   38, 199,223,  0,
   49, 199,223,  0,
   50,   2,  2,  2,
   63,   2,  2,  2,
   65,  44,223,  0,
   77,  44,223,  0,
   77,   2,  2,  2,
   88,   2,  2,  2,
   89,   0,223, 64,
  101,   0,223, 64,
  102,   2,  2,  2,
  113,   2,  2,  2,
  114,   0,219,219,
  128,   0,219,219,
  129,   2,  2,  2,
  140,   2,  2,  2,
  141,   0, 25,219,
  153,   0, 25,219,
  153,   2,  2,  2,
  165,   2,  2,  2,
  166, 126,  0, 59,
  178, 126,  0, 59,
  179,   2,  2,  2,
  191,   2,  2,  2,
  192,  55,  2, 32,
  204,  55,  2, 32,
  205,   2,  2,  2,
  216,   2,  2,  2,
  217, 217, 47,  0,
  228, 217, 47,  0,
  228,   2,  2,  2,
  242,   2,  2,  2,
  243,  26,  0,219,
  250,  26,  0,219,
  255,   2,  2,  2};

DEFINE_GRADIENT_PALETTE( cwhaxbyColors_gp ) {
    0,   1,  0, 39,
    7,   1,  0, 39,
    7,   2,  0, 67,
   15,   2,  0, 67,
   15,   1,  1, 99,
   23,   1,  1, 99,
   23,   0,  1,138,
   31,   0,  1,138,
   31,   0,  1,160,
   39,   0,  1,160,
   39,   0,  4,184,
   47,   0,  4,184,
   47,   1, 33,219,
   55,   1, 33,219,
   55,   1, 56,237,
   63,   1, 56,237,
   63,   1,111,255,
   71,   1,111,255,
   71,   3,133,255,
   79,   3,133,255,
   79,   8,152,255,
   87,   8,152,255,
   87,  20,193,219,
   95,  20,193,219,
   95,  26,213,186,
  103,  26,213,186,
  103,  39,213,138,
  111,  39,213,138,
  111,  51,215, 98,
  119,  51,215, 98,
  119,  91,233, 89,
  127,  91,233, 89,
  127, 144,255, 82,
  135, 144,255, 82,
  135, 179,233, 57,
  143, 179,233, 57,
  143, 217,215, 39,
  151, 217,215, 39,
  151, 234,175, 27,
  159, 234,175, 27,
  159, 255,131, 17,
  167, 255,131, 17,
  167, 255, 91,  9,
  175, 255, 91,  9,
  175, 227, 45, 11,
  183, 227, 45, 11,
  183, 213, 19, 13,
  191, 213, 19, 13,
  191, 255, 25, 18,
  199, 255, 25, 18,
  199, 255, 52, 42,
  207, 255, 52, 42,
  207, 255, 88, 77,
  215, 255, 88, 77,
  215, 229,117, 98,
  223, 229,117, 98,
  223, 255,142,132,
  231, 255,142,132,
  231, 255,175,166,
  239, 255,175,166,
  239, 255,213,207,
  247, 255,213,207,
  247, 255,255,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( cwredgrey11Colors_gp ) {
    0,  24,  0,  1,
   23,  24,  0,  1,
   23, 100,  1,  2,
   46, 100,  1,  2,
   46, 161, 29, 12,
   69, 161, 29, 12,
   69, 227, 97, 47,
   92, 227, 97, 47,
   92, 249,182,137,
  115, 249,182,137,
  115, 255,255,255,
  139, 255,255,255,
  139, 182,191,184,
  162, 182,191,184,
  162, 112,127,115,
  185, 112,127,115,
  185,  48, 62, 52,
  208,  48, 62, 52,
  208,  11, 18, 12,
  231,  11, 18, 12,
  231,   1,  1,  1,
  255,   1,  1,  1};

DEFINE_GRADIENT_PALETTE( cwprecip217Colors_gp ) {
    0, 255,255,255,
   14, 255,255,255,
   14, 206,235,255,
   28, 206,235,255,
   28, 161,195,255,
   42, 161,195,255,
   42, 104,151,255,
   56, 104,151,255,
   56,  55,115,255,
   70,  55,115,255,
   70,  41, 79,255,
   84,  41, 79,255,
   84,  31, 60,237,
   99,  31, 60,237,
   99,  21, 41,237,
  113,  21, 41,237,
  113,   0, 88,  1,
  127,   0, 88,  1,
  127,   5,130,  7,
  141,   5,130,  7,
  141, 101,164, 31,
  155, 101,164, 31,
  155, 110,241, 31,
  170, 110,241, 31,
  170, 255,241,  1,
  184, 255,241,  1,
  184, 255, 95,  1,
  198, 255, 95,  1,
  198, 192,  0,  0,
  212, 192,  0,  0,
  212, 117,  0,  0,
  226, 117,  0,  0,
  226,  43,  0,  0,
  240,  43,  0,  0,
  240,   0,  0,  0,
  255,   0,  0,  0};

DEFINE_GRADIENT_PALETTE( cwdkblueredColors_gp ) {
    0,   1,  0,  4,
    8,   1,  0, 13,
   17,   1,  0, 29,
   25,   1,  0, 52,
   33,   1,  0, 83,
   42,   1,  0,123,
   51,   1,  0,174,
   59,   1,  0,235,
   68,   1,  2,255,
   76,   4, 17,255,
   84,  16, 45,255,
   93,  37, 82,255,
  102,  69,127,255,
  110, 120,168,255,
  119, 182,217,255,
  127, 255,255,255,
  135, 255,217,184,
  144, 255,168,123,
  153, 255,127, 73,
  161, 255, 82, 40,
  170, 255, 45, 18,
  178, 255, 17,  5,
  186, 255,  2,  1,
  195, 234,  0,  1,
  204, 171,  0,  1,
  212, 120,  0,  1,
  221,  79,  0,  1,
  229,  48,  0,  1,
  237,  26,  0,  1,
  246,  12,  0,  1,
  255,   4,  0,  1};

DEFINE_GRADIENT_PALETTE( cwoldflagColors_gp ) {
    0,   1,  2,105,
   94,   1,  2,105,
   99, 199,  1,  7,
  104, 199,  1,  7,
  109, 255,255,255,
  117, 255,255,255,
  122, 199,  1,  7,
  124, 199,  1,  7,
  130, 255,255,255,
  137, 255,255,255,
  145, 199,  1,  7,
  150, 199,  1,  7,
  155, 255,255,255,
  160, 255,255,255,
  165, 199,  1,  7,
  170, 199,  1,  7,
  175, 255,255,255,
  181, 255,255,255,
  188, 199,  1,  7,
  191, 199,  1,  7,
  198, 255,255,255,
  204, 255,255,255,
  209, 199,  1,  7,
  211, 199,  1,  7,
  219, 255,255,255,
  224, 255,255,255,
  229, 199,  1,  7,
  234, 199,  1,  7,
  239, 255,255,255,
  244, 255,255,255,
  249, 199,  1,  7,
  255, 199,  1,  7};

DEFINE_GRADIENT_PALETTE( cwxmascandyColors_gp ) {
    0, 255,255,255,
   25, 255,  0,  0,
   51, 255,255,255,
   76,   0, 55,  0,
  102, 255,255,255,
  127, 255,  0,  0,
  153, 255,255,255,
  178,   0, 55,  0,
  204, 255,255,255,
  229, 255,  0,  0,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( cwrainfallColors_gp ) {
    0, 192,118,  3,
   36, 192,118,  3,
   36, 222,118, 24,
   72, 222,118, 24,
   72, 224,209, 37,
  109, 224,209, 37,
  109,  58,159, 43,
  145,  58,159, 43,
  145,   7,133, 52,
  182,   7,133, 52,
  182,   4,118, 50,
  218,   4,118, 50,
  218,   1, 85,  8,
  255,   1, 85,  8};

DEFINE_GRADIENT_PALETTE( cwqventColors_gp ) {
    0,   0,  0,  0,
   25,  42, 55, 45,
   25, 255,255,255,
   51,  42, 55, 45,
   51,   0,  0,  0,
   76,  42, 55, 45,
   76, 255,255,255,
  101,  42, 55, 45,
  101,   0,  0,  0,
  127,  42, 55, 45,
  127, 255,255,255,
  153,  42, 55, 45,
  153,   0,  0,  0,
  178,  42, 55, 45,
  178, 255,255,255,
  204,  42, 55, 45,
  204,   0,  0,  0,
  229,  42, 55, 45,
  229, 255,255,255,
  255,  42, 55, 45};

DEFINE_GRADIENT_PALETTE( ib_jul01_gp ) {
    0, 194,  1,  1,
   94,   1, 29, 18,
  132,  57,131, 28,
  255, 113,  1,  1};

DEFINE_GRADIENT_PALETTE( es_vintage_57_gp ) {
    0,   2,  1,  1,
   53,  18,  1,  0,
  104,  69, 29,  1,
  153, 167,135, 10,
  255,  46, 56,  4};

DEFINE_GRADIENT_PALETTE( es_vintage_01_gp ) {
    0,   4,  1,  1,
   51,  16,  0,  1,
   76,  97,104,  3,
  101, 255,131, 19,
  127,  67,  9,  4,
  153,  16,  0,  1,
  229,   4,  1,  1,
  255,   4,  1,  1};

DEFINE_GRADIENT_PALETTE( es_rivendell_15_gp ) {
    0,   1, 14,  5,
  101,  16, 36, 14,
  165,  56, 68, 30,
  242, 150,156, 99,
  255, 150,156, 99};

DEFINE_GRADIENT_PALETTE( rgi_15_gp ) {
    0,   4,  1, 31,
   31,  55,  1, 16,
   63, 197,  3,  7,
   95,  59,  2, 17,
  127,   6,  2, 34,
  159,  39,  6, 33,
  191, 112, 13, 32,
  223,  56,  9, 35,
  255,  22,  6, 38};

DEFINE_GRADIENT_PALETTE( retro2_16_gp ) {
    0, 188,135,  1,
  255,  46,  7,  1};

DEFINE_GRADIENT_PALETTE( Analogous_1_gp ) {
    0,   3,  0,255,
   63,  23,  0,255,
  127,  67,  0,255,
  191, 142,  0, 45,
  255, 255,  0,  0};

DEFINE_GRADIENT_PALETTE( es_pinksplash_08_gp ) {
    0, 126, 11,255,
  127, 197,  1, 22,
  175, 210,157,172,
  221, 157,  3,112,
  255, 157,  3,112};

DEFINE_GRADIENT_PALETTE( es_pinksplash_07_gp ) {
    0, 229,  1,  1,
   61, 242,  4, 63,
  101, 255, 12,255,
  127, 249, 81,252,
  153, 255, 11,235,
  193, 244,  5, 68,
  255, 232,  1,  5};

DEFINE_GRADIENT_PALETTE( Coral_reef_gp ) {
    0,  40,199,197,
   50,  10,152,155,
   96,   1,111,120,
   96,  43,127,162,
  139,  10, 73,111,
  255,   1, 34, 71};

DEFINE_GRADIENT_PALETTE( es_ocean_breeze_068_gp ) {
    0, 100,156,153,
   51,   1, 99,137,
  101,   1, 68, 84,
  104,  35,142,168,
  178,   0, 63,117,
  255,   1, 10, 10};

DEFINE_GRADIENT_PALETTE( es_ocean_breeze_036_gp ) {
    0,   1,  6,  7,
   89,   1, 99,111,
  153, 144,209,255,
  255,   0, 73, 82};

DEFINE_GRADIENT_PALETTE( departure_gp ) {
    0,   8,  3,  0,
   42,  23,  7,  0,
   63,  75, 38,  6,
   84, 169, 99, 38,
  106, 213,169,119,
  116, 255,255,255,
  138, 135,255,138,
  148,  22,255, 24,
  170,   0,255,  0,
  191,   0,136,  0,
  212,   0, 55,  0,
  255,   0, 55,  0};

DEFINE_GRADIENT_PALETTE( es_landscape_64_gp ) {
    0,   0,  0,  0,
   37,   2, 25,  1,
   76,  15,115,  5,
  127,  79,213,  1,
  128, 126,211, 47,
  130, 188,209,247,
  153, 144,182,205,
  204,  59,117,250,
  255,   1, 37,192};

DEFINE_GRADIENT_PALETTE( es_landscape_33_gp ) {
    0,   1,  5,  0,
   19,  32, 23,  1,
   38, 161, 55,  1,
   63, 229,144,  1,
   66,  39,142, 74,
  255,   1,  4,  1};

DEFINE_GRADIENT_PALETTE( rainbowsherbet_gp ) {
    0, 255, 33,  4,
   43, 255, 68, 25,
   86, 255,  7, 25,
  127, 255, 82,103,
  170, 255,255,242,
  209,  42,255, 22,
  255,  87,255, 65};

DEFINE_GRADIENT_PALETTE( gr65_hult_gp ) {
    0, 247,176,247,
   48, 255,136,255,
   89, 220, 29,226,
  160,   7, 82,178,
  216,   1,124,109,
  255,   1,124,109};

DEFINE_GRADIENT_PALETTE( gr64_hult_gp ) {
    0,   1,124,109,
   66,   1, 93, 79,
  104,  52, 65,  1,
  130, 115,127,  1,
  150,  52, 65,  1,
  201,   1, 86, 72,
  239,   0, 55, 45,
  255,   0, 55, 45};

DEFINE_GRADIENT_PALETTE( GMT_drywet_gp ) {
    0,  47, 30,  2,
   42, 213,147, 24,
   84, 103,219, 52,
  127,   3,219,207,
  170,   1, 48,214,
  212,   1,  1,111,
  255,   1,  7, 33};

DEFINE_GRADIENT_PALETTE( ib15_gp ) {
    0, 113, 91,147,
   72, 157, 88, 78,
   89, 208, 85, 33,
  107, 255, 29, 11,
  141, 137, 31, 39,
  255,  59, 33, 89};

DEFINE_GRADIENT_PALETTE( Fuschia_7_gp ) {
    0,  43,  3,153,
   63, 100,  4,103,
  127, 188,  5, 66,
  191, 161, 11,115,
  255, 135, 20,182};

DEFINE_GRADIENT_PALETTE( es_emerald_dragon_08_gp ) {
    0,  97,255,  1,
  101,  47,133,  1,
  178,  13, 43,  1,
  255,   2, 10,  1};

DEFINE_GRADIENT_PALETTE( lava_gp ) {
    0,   0,  0,  0,
   46,  18,  0,  0,
   96, 113,  0,  0,
  108, 142,  3,  1,
  119, 175, 17,  1,
  146, 213, 44,  2,
  174, 255, 82,  4,
  188, 255,115,  4,
  202, 255,156,  4,
  218, 255,203,  4,
  234, 255,255,  4,
  244, 255,255, 71,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( fire_gp ) {
    0,   1,  1,  0,
   76,  32,  5,  0,
  146, 192, 24,  0,
  197, 220,105,  5,
  240, 252,255, 31,
  250, 252,255,111,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( Colorfull_gp ) {
    0,  10, 85,  5,
   25,  29,109, 18,
   60,  59,138, 42,
   93,  83, 99, 52,
  106, 110, 66, 64,
  109, 123, 49, 65,
  113, 139, 35, 66,
  116, 192,117, 98,
  124, 255,255,137,
  168, 100,180,155,
  255,  22,121,174};

DEFINE_GRADIENT_PALETTE( Magenta_Evening_gp ) {
    0,  71, 27, 39,
   31, 130, 11, 51,
   63, 213,  2, 64,
   70, 232,  1, 66,
   76, 252,  1, 69,
  108, 123,  2, 51,
  255,  46,  9, 35};

DEFINE_GRADIENT_PALETTE( Pink_Purple_gp ) {
    0,  19,  2, 39,
   25,  26,  4, 45,
   51,  33,  6, 52,
   76,  68, 62,125,
  102, 118,187,240,
  109, 163,215,247,
  114, 217,244,255,
  122, 159,149,221,
  149, 113, 78,188,
  183, 128, 57,155,
  255, 146, 40,123};

DEFINE_GRADIENT_PALETTE( Sunset_Real_gp ) {
    0, 120,  0,  0,
   22, 179, 22,  0,
   51, 255,104,  0,
   85, 167, 22, 18,
  135, 100,  0,103,
  198,  16,  0,130,
  255,   0,  0,160};

DEFINE_GRADIENT_PALETTE( es_autumn_19_gp ) {
    0,  26,  1,  1,
   51,  67,  4,  1,
   84, 118, 14,  1,
  104, 137,152, 52,
  112, 113, 65,  1,
  122, 133,149, 59,
  124, 137,152, 52,
  135, 113, 65,  1,
  142, 139,154, 46,
  163, 113, 13,  1,
  204,  55,  3,  1,
  249,  17,  1,  1,
  255,  17,  1,  1};

DEFINE_GRADIENT_PALETTE( BlacK_Blue_Magenta_White_gp ) {
    0,   0,  0,  0,
   42,   0,  0, 45,
   84,   0,  0,255,
  127,  42,  0,255,
  170, 255,  0,255,
  212, 255, 55,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( BlacK_Magenta_Red_gp ) {
    0,   0,  0,  0,
   63,  42,  0, 45,
  127, 255,  0,255,
  191, 255,  0, 45,
  255, 255,  0,  0};

DEFINE_GRADIENT_PALETTE( BlacK_Red_Magenta_Yellow_gp ) {
    0,   0,  0,  0,
   42,  42,  0,  0,
   84, 255,  0,  0,
  127, 255,  0, 45,
  170, 255,  0,255,
  212, 255, 55, 45,
  255, 255,255,  0};

DEFINE_GRADIENT_PALETTE( Blue_Cyan_Yellow_gp ) {
    0,   0,  0,255,
   63,   0, 55,255,
  127,   0,255,255,
  191,  42,255, 45,
  255, 255,255,  0};

const TProgmemRGBGradientPalettePtr cwGradientPalettes[] = {
  cwbarberpole1_gp,
  cwloversColors_gp,
  cwopaqueColors_gp,
  cwtempColors_gp,
  cwrecliningColors_gp,
  cwrgb1Colors_gp,
  cwpair11Colors_gp,
  cwi8Colors_gp,
  cwfroth316Colors_gp,
  cwshikon22Colors_gp,
  cwshikon23Colors_gp,
  cwhaxbyColors_gp,
  cwredgrey11Colors_gp,
  cwprecip217Colors_gp,
  cwdkblueredColors_gp,
  cwoldflagColors_gp,
  cwxmascandyColors_gp,
  cwrainfallColors_gp,
  cwqventColors_gp,
  Sunset_Real_gp,
  es_rivendell_15_gp,
  es_ocean_breeze_036_gp,
  rgi_15_gp,
  retro2_16_gp,
  Analogous_1_gp,
  es_pinksplash_08_gp,
  Coral_reef_gp,
  es_ocean_breeze_068_gp,
  es_pinksplash_07_gp,
  es_vintage_01_gp,
  departure_gp,
  es_landscape_64_gp,
  es_landscape_33_gp,
  rainbowsherbet_gp,
  gr65_hult_gp,
  gr64_hult_gp,
  GMT_drywet_gp,
  ib_jul01_gp,
  es_vintage_57_gp,
  ib15_gp,
  Fuschia_7_gp,
  es_emerald_dragon_08_gp,
  lava_gp,
  fire_gp,
  Colorfull_gp,
  Magenta_Evening_gp,
  Pink_Purple_gp,
  es_autumn_19_gp,
  BlacK_Blue_Magenta_White_gp,
  BlacK_Magenta_Red_gp,
  BlacK_Red_Magenta_Yellow_gp,
  Blue_Cyan_Yellow_gp };

// Count of how many cpt-city gradients are defined:
const uint8_t cwGradientPaletteCount = 
  sizeof( cwGradientPalettes) / sizeof( TProgmemRGBGradientPalettePtr );
// EOF colorwaves palette //

// Sidebars palette//
DEFINE_GRADIENT_PALETTE( SBbarberpole1_gp ) {
    0, 255,  4,  2,
   40, 255,  4,  2,
   40, 255, 34, 26,
   61, 255, 34, 26,
   61, 255, 66, 54,
   75, 255, 66, 54,
   75, 255, 92, 80,
   85, 255, 92, 80,
   85, 255,115,103,
   92, 255,115,103,
   92, 255,135,123,
   98, 255,135,123,
   98, 255,154,144,
  103, 255,154,144,
  103, 255,169,160,
  108, 255,169,160,
  108, 255,186,178,
  112, 255,186,178,
  112, 255,201,194,
  116, 255,201,194,
  116, 255,217,212,
  120, 255,217,212,
  120, 255,231,228,
  123, 255,231,228,
  123, 255,246,245,
  127, 255,246,245,
  127, 255,255,255,
  127, 255,255,255,
  127, 247,248,255,
  130, 247,248,255,
  130, 229,233,255,
  134, 229,233,255,
  134, 210,217,255,
  138, 210,217,255,
  138, 194,203,255,
  142, 194,203,255,
  142, 177,187,255,
  146, 177,187,255,
  146, 159,171,255,
  150, 159,171,255,
  150, 140,154,255,
  156, 140,154,255,
  156, 121,136,255,
  162, 121,136,255,
  162, 100,115,255,
  169, 100,115,255,
  169,  77, 92,255,
  179,  77, 92,255,
  179,  50, 65,255,
  193,  50, 65,255,
  193,  23, 33,255,
  214,  23, 33,255,
  214,   2,  4,255,
  255,   2,  4,255};

DEFINE_GRADIENT_PALETTE( SBloversColors_gp ) {
    0, 222, 10,  7,
   51, 222, 10,  7,
   51, 255, 71, 21,
  102, 255, 71, 21,
  102, 242,173, 47,
  153, 242,173, 47,
  153, 184,233, 91,
  204, 184,233, 91,
  204,  39,182,137,
  255,  39,182,137};

DEFINE_GRADIENT_PALETTE( SBopaqueColors_gp ) {
    0, 192,203,112,
   51, 192,203,112,
   51, 132,169,112,
  102, 132,169,112,
  102,  27, 99, 83,
  153,  27, 99, 83,
  153,  46, 36, 28,
  204,  46, 36, 28,
  204,  71,  7, 19,
  255,  71,  7, 19};

DEFINE_GRADIENT_PALETTE( SBtempColors_gp ) {
    0,   1, 27,105,
   14,   1, 27,105,
   14,   1, 40,127,
   28,   1, 40,127,
   28,   1, 70,168,
   42,   1, 70,168,
   42,   1, 92,197,
   56,   1, 92,197,
   56,   1,119,221,
   70,   1,119,221,
   70,   3,130,151,
   84,   3,130,151,
   84,  23,156,149,
   99,  23,156,149,
   99,  67,182,112,
  113,  67,182,112,
  113, 121,201, 52,
  127, 121,201, 52,
  127, 142,203, 11,
  141, 142,203, 11,
  141, 224,223,  1,
  155, 224,223,  1,
  155, 252,187,  2,
  170, 252,187,  2,
  170, 247,147,  1,
  184, 247,147,  1,
  184, 237, 87,  1,
  198, 237, 87,  1,
  198, 229, 43,  1,
  212, 229, 43,  1,
  212, 220, 15,  1,
  226, 220, 15,  1,
  226, 171,  2,  2,
  240, 171,  2,  2,
  240,  80,  3,  3,
  255,  80,  3,  3};

DEFINE_GRADIENT_PALETTE( SBrecliningColors_gp ) {
    0,   6, 45, 16,
   51,   6, 45, 16,
   51, 135,201,108,
  102, 135,201,108,
  102, 227,221,151,
  153, 227,221,151,
  153,  83,182,186,
  204,  83,182,186,
  204, 159,127,178,
  255, 159,127,178};

DEFINE_GRADIENT_PALETTE( SBrgb1Colors_gp ) {
    0,   0,  0,  0,
   84,  10, 17,255,
   84,   0, 17,  0,
  169,  10,255, 12,
  169,  10,  0,  0,
  255, 255, 17, 12};

DEFINE_GRADIENT_PALETTE( SBpair11Colors_gp ) {
    0,  83,159,190,
   23,  83,159,190,
   23,   1, 48,106,
   46,   1, 48,106,
   46, 100,189, 54,
   69, 100,189, 54,
   69,   3, 91,  3,
   92,   3, 91,  3,
   92, 244, 84, 71,
  115, 244, 84, 71,
  115, 188,  1,  1,
  139, 188,  1,  1,
  139, 249,135, 31,
  162, 249,135, 31,
  162, 255, 55,  0,
  185, 255, 55,  0,
  185, 139,115,164,
  208, 139,115,164,
  208,  26, 10, 72,
  231,  26, 10, 72,
  231, 255,255, 71,
  255, 255,255, 71};

DEFINE_GRADIENT_PALETTE( SBi8Colors_gp ) {
    0,   0,  0,  0,
   31,   0,  0,  0,
   31,   0,255,  0,
   63,   0,255,  0,
   63,   0,  0,255,
   95,   0,  0,255,
   95,   0,255,255,
  127,   0,255,255,
  127, 255,  0,  0,
  159, 255,  0,  0,
  159, 255,255,  0,
  191, 255,255,  0,
  191, 255,  0,255,
  223, 255,  0,255,
  223, 255,255,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( SBfroth316Colors_gp ) {
    0, 247,  0,  0,
   17, 247,  0,  0,
   17, 157,  0,  0,
   33, 157,  0,  0,
   33,  86,  0,  0,
   51,  86,  0,  0,
   51,  39,  0,  0,
   68,  39,  0,  0,
   68,  12,  0,  0,
   84,  12,  0,  0,
   84,   0,248,  0,
  102,   0,248,  0,
  102,   0,169,  0,
  119,   0,169,  0,
  119,   0,101,  0,
  135,   0,101,  0,
  135,   0, 52,  0,
  153,   0, 52,  0,
  153,   0, 19,  0,
  170,   0, 19,  0,
  170,   0,  0,247,
  186,   0,  0,247,
  186,   0,  0,160,
  204,   0,  0,160,
  204,   0,  0, 89,
  221,   0,  0, 89,
  221,   0,  0, 42,
  237,   0,  0, 42,
  237,   0,  0, 14,
  255,   0,  0, 14};

DEFINE_GRADIENT_PALETTE( SBshikon22Colors_gp ) {
    0,   2,  2,  2,
   24, 217, 47,  0,
   26,   2,  2,  2,
   49, 126,  0,  1,
   51,   2,  2,  2,
   73,   0,223, 64,
   76,   2,  2,  2,
  100, 126,  0, 59,
  102,   2,  2,  2,
  125,   0,219,219,
  127,   2,  2,  2,
  151,   0, 25,219,
  153,   2,  2,  2,
  175,  44,223,  0,
  179,   2,  2,  2,
  201,  55,  2, 32,
  203,   2,  2,  2,
  226, 199,223,  0,
  229,   2,  2,  2,
  252,  26,  0,219,
  255,   2,  2,  2};

DEFINE_GRADIENT_PALETTE( SBshikon23Colors_gp ) {
    0,   2,  2,  2,
    8,   2,  2,  2,
   10, 126,  0,  1,
   24, 126,  0,  1,
   25,   2,  2,  2,
   37,   2,  2,  2,
   38, 199,223,  0,
   49, 199,223,  0,
   50,   2,  2,  2,
   63,   2,  2,  2,
   65,  44,223,  0,
   77,  44,223,  0,
   77,   2,  2,  2,
   88,   2,  2,  2,
   89,   0,223, 64,
  101,   0,223, 64,
  102,   2,  2,  2,
  113,   2,  2,  2,
  114,   0,219,219,
  128,   0,219,219,
  129,   2,  2,  2,
  140,   2,  2,  2,
  141,   0, 25,219,
  153,   0, 25,219,
  153,   2,  2,  2,
  165,   2,  2,  2,
  166, 126,  0, 59,
  178, 126,  0, 59,
  179,   2,  2,  2,
  191,   2,  2,  2,
  192,  55,  2, 32,
  204,  55,  2, 32,
  205,   2,  2,  2,
  216,   2,  2,  2,
  217, 217, 47,  0,
  228, 217, 47,  0,
  228,   2,  2,  2,
  242,   2,  2,  2,
  243,  26,  0,219,
  250,  26,  0,219,
  255,   2,  2,  2};

DEFINE_GRADIENT_PALETTE( SBhaxbyColors_gp ) {
    0,   1,  0, 39,
    7,   1,  0, 39,
    7,   2,  0, 67,
   15,   2,  0, 67,
   15,   1,  1, 99,
   23,   1,  1, 99,
   23,   0,  1,138,
   31,   0,  1,138,
   31,   0,  1,160,
   39,   0,  1,160,
   39,   0,  4,184,
   47,   0,  4,184,
   47,   1, 33,219,
   55,   1, 33,219,
   55,   1, 56,237,
   63,   1, 56,237,
   63,   1,111,255,
   71,   1,111,255,
   71,   3,133,255,
   79,   3,133,255,
   79,   8,152,255,
   87,   8,152,255,
   87,  20,193,219,
   95,  20,193,219,
   95,  26,213,186,
  103,  26,213,186,
  103,  39,213,138,
  111,  39,213,138,
  111,  51,215, 98,
  119,  51,215, 98,
  119,  91,233, 89,
  127,  91,233, 89,
  127, 144,255, 82,
  135, 144,255, 82,
  135, 179,233, 57,
  143, 179,233, 57,
  143, 217,215, 39,
  151, 217,215, 39,
  151, 234,175, 27,
  159, 234,175, 27,
  159, 255,131, 17,
  167, 255,131, 17,
  167, 255, 91,  9,
  175, 255, 91,  9,
  175, 227, 45, 11,
  183, 227, 45, 11,
  183, 213, 19, 13,
  191, 213, 19, 13,
  191, 255, 25, 18,
  199, 255, 25, 18,
  199, 255, 52, 42,
  207, 255, 52, 42,
  207, 255, 88, 77,
  215, 255, 88, 77,
  215, 229,117, 98,
  223, 229,117, 98,
  223, 255,142,132,
  231, 255,142,132,
  231, 255,175,166,
  239, 255,175,166,
  239, 255,213,207,
  247, 255,213,207,
  247, 255,255,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( SBredgrey11Colors_gp ) {
    0,  24,  0,  1,
   23,  24,  0,  1,
   23, 100,  1,  2,
   46, 100,  1,  2,
   46, 161, 29, 12,
   69, 161, 29, 12,
   69, 227, 97, 47,
   92, 227, 97, 47,
   92, 249,182,137,
  115, 249,182,137,
  115, 255,255,255,
  139, 255,255,255,
  139, 182,191,184,
  162, 182,191,184,
  162, 112,127,115,
  185, 112,127,115,
  185,  48, 62, 52,
  208,  48, 62, 52,
  208,  11, 18, 12,
  231,  11, 18, 12,
  231,   1,  1,  1,
  255,   1,  1,  1};

DEFINE_GRADIENT_PALETTE( SBprecip217Colors_gp ) {
    0, 255,255,255,
   14, 255,255,255,
   14, 206,235,255,
   28, 206,235,255,
   28, 161,195,255,
   42, 161,195,255,
   42, 104,151,255,
   56, 104,151,255,
   56,  55,115,255,
   70,  55,115,255,
   70,  41, 79,255,
   84,  41, 79,255,
   84,  31, 60,237,
   99,  31, 60,237,
   99,  21, 41,237,
  113,  21, 41,237,
  113,   0, 88,  1,
  127,   0, 88,  1,
  127,   5,130,  7,
  141,   5,130,  7,
  141, 101,164, 31,
  155, 101,164, 31,
  155, 110,241, 31,
  170, 110,241, 31,
  170, 255,241,  1,
  184, 255,241,  1,
  184, 255, 95,  1,
  198, 255, 95,  1,
  198, 192,  0,  0,
  212, 192,  0,  0,
  212, 117,  0,  0,
  226, 117,  0,  0,
  226,  43,  0,  0,
  240,  43,  0,  0,
  240,   0,  0,  0,
  255,   0,  0,  0};

DEFINE_GRADIENT_PALETTE( SBdkblueredColors_gp ) {
    0,   1,  0,  4,
    8,   1,  0, 13,
   17,   1,  0, 29,
   25,   1,  0, 52,
   33,   1,  0, 83,
   42,   1,  0,123,
   51,   1,  0,174,
   59,   1,  0,235,
   68,   1,  2,255,
   76,   4, 17,255,
   84,  16, 45,255,
   93,  37, 82,255,
  102,  69,127,255,
  110, 120,168,255,
  119, 182,217,255,
  127, 255,255,255,
  135, 255,217,184,
  144, 255,168,123,
  153, 255,127, 73,
  161, 255, 82, 40,
  170, 255, 45, 18,
  178, 255, 17,  5,
  186, 255,  2,  1,
  195, 234,  0,  1,
  204, 171,  0,  1,
  212, 120,  0,  1,
  221,  79,  0,  1,
  229,  48,  0,  1,
  237,  26,  0,  1,
  246,  12,  0,  1,
  255,   4,  0,  1};

DEFINE_GRADIENT_PALETTE( SBoldflagColors_gp ) {
    0,   1,  2,105,
   94,   1,  2,105,
   99, 199,  1,  7,
  104, 199,  1,  7,
  109, 255,255,255,
  117, 255,255,255,
  122, 199,  1,  7,
  124, 199,  1,  7,
  130, 255,255,255,
  137, 255,255,255,
  145, 199,  1,  7,
  150, 199,  1,  7,
  155, 255,255,255,
  160, 255,255,255,
  165, 199,  1,  7,
  170, 199,  1,  7,
  175, 255,255,255,
  181, 255,255,255,
  188, 199,  1,  7,
  191, 199,  1,  7,
  198, 255,255,255,
  204, 255,255,255,
  209, 199,  1,  7,
  211, 199,  1,  7,
  219, 255,255,255,
  224, 255,255,255,
  229, 199,  1,  7,
  234, 199,  1,  7,
  239, 255,255,255,
  244, 255,255,255,
  249, 199,  1,  7,
  255, 199,  1,  7};

DEFINE_GRADIENT_PALETTE( SBxmascandyColors_gp ) {
    0, 255,255,255,
   25, 255,  0,  0,
   51, 255,255,255,
   76,   0, 55,  0,
  102, 255,255,255,
  127, 255,  0,  0,
  153, 255,255,255,
  178,   0, 55,  0,
  204, 255,255,255,
  229, 255,  0,  0,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( SBrainfallColors_gp ) {
    0, 192,118,  3,
   36, 192,118,  3,
   36, 222,118, 24,
   72, 222,118, 24,
   72, 224,209, 37,
  109, 224,209, 37,
  109,  58,159, 43,
  145,  58,159, 43,
  145,   7,133, 52,
  182,   7,133, 52,
  182,   4,118, 50,
  218,   4,118, 50,
  218,   1, 85,  8,
  255,   1, 85,  8};

DEFINE_GRADIENT_PALETTE( SBqventColors_gp ) {
    0,   0,  0,  0,
   25,  42, 55, 45,
   25, 255,255,255,
   51,  42, 55, 45,
   51,   0,  0,  0,
   76,  42, 55, 45,
   76, 255,255,255,
  101,  42, 55, 45,
  101,   0,  0,  0,
  127,  42, 55, 45,
  127, 255,255,255,
  153,  42, 55, 45,
  153,   0,  0,  0,
  178,  42, 55, 45,
  178, 255,255,255,
  204,  42, 55, 45,
  204,   0,  0,  0,
  229,  42, 55, 45,
  229, 255,255,255,
  255,  42, 55, 45};

DEFINE_GRADIENT_PALETTE( SBib_jul01_gp ) {
    0, 194,  1,  1,
   94,   1, 29, 18,
  132,  57,131, 28,
  255, 113,  1,  1};

DEFINE_GRADIENT_PALETTE( SBes_vintage_57_gp ) {
    0,   2,  1,  1,
   53,  18,  1,  0,
  104,  69, 29,  1,
  153, 167,135, 10,
  255,  46, 56,  4};

DEFINE_GRADIENT_PALETTE( SBes_vintage_01_gp ) {
    0,   4,  1,  1,
   51,  16,  0,  1,
   76,  97,104,  3,
  101, 255,131, 19,
  127,  67,  9,  4,
  153,  16,  0,  1,
  229,   4,  1,  1,
  255,   4,  1,  1};

DEFINE_GRADIENT_PALETTE( SBes_rivendell_15_gp ) {
    0,   1, 14,  5,
  101,  16, 36, 14,
  165,  56, 68, 30,
  242, 150,156, 99,
  255, 150,156, 99};

DEFINE_GRADIENT_PALETTE( SBrgi_15_gp ) {
    0,   4,  1, 31,
   31,  55,  1, 16,
   63, 197,  3,  7,
   95,  59,  2, 17,
  127,   6,  2, 34,
  159,  39,  6, 33,
  191, 112, 13, 32,
  223,  56,  9, 35,
  255,  22,  6, 38};

DEFINE_GRADIENT_PALETTE( SBretro2_16_gp ) {
    0, 188,135,  1,
  255,  46,  7,  1};

DEFINE_GRADIENT_PALETTE( SBAnalogous_1_gp ) {
    0,   3,  0,255,
   63,  23,  0,255,
  127,  67,  0,255,
  191, 142,  0, 45,
  255, 255,  0,  0};

DEFINE_GRADIENT_PALETTE( SBes_pinksplash_08_gp ) {
    0, 126, 11,255,
  127, 197,  1, 22,
  175, 210,157,172,
  221, 157,  3,112,
  255, 157,  3,112};

DEFINE_GRADIENT_PALETTE( SBes_pinksplash_07_gp ) {
    0, 229,  1,  1,
   61, 242,  4, 63,
  101, 255, 12,255,
  127, 249, 81,252,
  153, 255, 11,235,
  193, 244,  5, 68,
  255, 232,  1,  5};

DEFINE_GRADIENT_PALETTE( SBCoral_reef_gp ) {
    0,  40,199,197,
   50,  10,152,155,
   96,   1,111,120,
   96,  43,127,162,
  139,  10, 73,111,
  255,   1, 34, 71};

DEFINE_GRADIENT_PALETTE( SBes_ocean_breeze_068_gp ) {
    0, 100,156,153,
   51,   1, 99,137,
  101,   1, 68, 84,
  104,  35,142,168,
  178,   0, 63,117,
  255,   1, 10, 10};

DEFINE_GRADIENT_PALETTE( SBes_ocean_breeze_036_gp ) {
    0,   1,  6,  7,
   89,   1, 99,111,
  153, 144,209,255,
  255,   0, 73, 82};

DEFINE_GRADIENT_PALETTE( SBdeparture_gp ) {
    0,   8,  3,  0,
   42,  23,  7,  0,
   63,  75, 38,  6,
   84, 169, 99, 38,
  106, 213,169,119,
  116, 255,255,255,
  138, 135,255,138,
  148,  22,255, 24,
  170,   0,255,  0,
  191,   0,136,  0,
  212,   0, 55,  0,
  255,   0, 55,  0};

DEFINE_GRADIENT_PALETTE( SBes_landscape_64_gp ) {
    0,   0,  0,  0,
   37,   2, 25,  1,
   76,  15,115,  5,
  127,  79,213,  1,
  128, 126,211, 47,
  130, 188,209,247,
  153, 144,182,205,
  204,  59,117,250,
  255,   1, 37,192};

DEFINE_GRADIENT_PALETTE( SBes_landscape_33_gp ) {
    0,   1,  5,  0,
   19,  32, 23,  1,
   38, 161, 55,  1,
   63, 229,144,  1,
   66,  39,142, 74,
  255,   1,  4,  1};

DEFINE_GRADIENT_PALETTE( SBrainbowsherbet_gp ) {
    0, 255, 33,  4,
   43, 255, 68, 25,
   86, 255,  7, 25,
  127, 255, 82,103,
  170, 255,255,242,
  209,  42,255, 22,
  255,  87,255, 65};

DEFINE_GRADIENT_PALETTE( SBgr65_hult_gp ) {
    0, 247,176,247,
   48, 255,136,255,
   89, 220, 29,226,
  160,   7, 82,178,
  216,   1,124,109,
  255,   1,124,109};

DEFINE_GRADIENT_PALETTE( SBgr64_hult_gp ) {
    0,   1,124,109,
   66,   1, 93, 79,
  104,  52, 65,  1,
  130, 115,127,  1,
  150,  52, 65,  1,
  201,   1, 86, 72,
  239,   0, 55, 45,
  255,   0, 55, 45};

DEFINE_GRADIENT_PALETTE( SBGMT_drywet_gp ) {
    0,  47, 30,  2,
   42, 213,147, 24,
   84, 103,219, 52,
  127,   3,219,207,
  170,   1, 48,214,
  212,   1,  1,111,
  255,   1,  7, 33};

DEFINE_GRADIENT_PALETTE( SBib15_gp ) {
    0, 113, 91,147,
   72, 157, 88, 78,
   89, 208, 85, 33,
  107, 255, 29, 11,
  141, 137, 31, 39,
  255,  59, 33, 89};

DEFINE_GRADIENT_PALETTE( SBFuschia_7_gp ) {
    0,  43,  3,153,
   63, 100,  4,103,
  127, 188,  5, 66,
  191, 161, 11,115,
  255, 135, 20,182};

DEFINE_GRADIENT_PALETTE( SBes_emerald_dragon_08_gp ) {
    0,  97,255,  1,
  101,  47,133,  1,
  178,  13, 43,  1,
  255,   2, 10,  1};

DEFINE_GRADIENT_PALETTE( SBlava_gp ) {
    0,   0,  0,  0,
   46,  18,  0,  0,
   96, 113,  0,  0,
  108, 142,  3,  1,
  119, 175, 17,  1,
  146, 213, 44,  2,
  174, 255, 82,  4,
  188, 255,115,  4,
  202, 255,156,  4,
  218, 255,203,  4,
  234, 255,255,  4,
  244, 255,255, 71,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( SBfire_gp ) {
    0,   1,  1,  0,
   76,  32,  5,  0,
  146, 192, 24,  0,
  197, 220,105,  5,
  240, 252,255, 31,
  250, 252,255,111,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( SBColorfull_gp ) {
    0,  10, 85,  5,
   25,  29,109, 18,
   60,  59,138, 42,
   93,  83, 99, 52,
  106, 110, 66, 64,
  109, 123, 49, 65,
  113, 139, 35, 66,
  116, 192,117, 98,
  124, 255,255,137,
  168, 100,180,155,
  255,  22,121,174};

DEFINE_GRADIENT_PALETTE( SBMagenta_Evening_gp ) {
    0,  71, 27, 39,
   31, 130, 11, 51,
   63, 213,  2, 64,
   70, 232,  1, 66,
   76, 252,  1, 69,
  108, 123,  2, 51,
  255,  46,  9, 35};

DEFINE_GRADIENT_PALETTE( SBPink_Purple_gp ) {
    0,  19,  2, 39,
   25,  26,  4, 45,
   51,  33,  6, 52,
   76,  68, 62,125,
  102, 118,187,240,
  109, 163,215,247,
  114, 217,244,255,
  122, 159,149,221,
  149, 113, 78,188,
  183, 128, 57,155,
  255, 146, 40,123};

DEFINE_GRADIENT_PALETTE( SBSunset_Real_gp ) {
    0, 120,  0,  0,
   22, 179, 22,  0,
   51, 255,104,  0,
   85, 167, 22, 18,
  135, 100,  0,103,
  198,  16,  0,130,
  255,   0,  0,160};

DEFINE_GRADIENT_PALETTE( SBes_autumn_19_gp ) {
    0,  26,  1,  1,
   51,  67,  4,  1,
   84, 118, 14,  1,
  104, 137,152, 52,
  112, 113, 65,  1,
  122, 133,149, 59,
  124, 137,152, 52,
  135, 113, 65,  1,
  142, 139,154, 46,
  163, 113, 13,  1,
  204,  55,  3,  1,
  249,  17,  1,  1,
  255,  17,  1,  1};

DEFINE_GRADIENT_PALETTE( SBBlacK_Blue_Magenta_White_gp ) {
    0,   0,  0,  0,
   42,   0,  0, 45,
   84,   0,  0,255,
  127,  42,  0,255,
  170, 255,  0,255,
  212, 255, 55,255,
  255, 255,255,255};

DEFINE_GRADIENT_PALETTE( SBBlacK_Magenta_Red_gp ) {
    0,   0,  0,  0,
   63,  42,  0, 45,
  127, 255,  0,255,
  191, 255,  0, 45,
  255, 255,  0,  0};

DEFINE_GRADIENT_PALETTE( SBBlacK_Red_Magenta_Yellow_gp ) {
    0,   0,  0,  0,
   42,  42,  0,  0,
   84, 255,  0,  0,
  127, 255,  0, 45,
  170, 255,  0,255,
  212, 255, 55, 45,
  255, 255,255,  0};

DEFINE_GRADIENT_PALETTE( SBBlue_Cyan_Yellow_gp ) {
    0,   0,  0,255,
   63,   0, 55,255,
  127,   0,255,255,
  191,  42,255, 45,
  255, 255,255,  0};

const TProgmemRGBGradientPalettePtr SBGradientPalettes[] = {
  SBbarberpole1_gp,
  SBloversColors_gp,
  SBopaqueColors_gp,
  SBtempColors_gp,
  SBrecliningColors_gp,
  SBrgb1Colors_gp,
  SBpair11Colors_gp,
  SBi8Colors_gp,
  SBfroth316Colors_gp,
  SBshikon22Colors_gp,
  SBshikon23Colors_gp,
  SBhaxbyColors_gp,
  SBredgrey11Colors_gp,
  SBprecip217Colors_gp,
  SBdkblueredColors_gp,
  SBoldflagColors_gp,
  SBxmascandyColors_gp,
  SBrainfallColors_gp,
  SBqventColors_gp,
  SBSunset_Real_gp,
  SBes_rivendell_15_gp,
  SBes_ocean_breeze_036_gp,
  SBrgi_15_gp,
  SBretro2_16_gp,
  SBAnalogous_1_gp,
  SBes_pinksplash_08_gp,
  SBCoral_reef_gp,
  SBes_ocean_breeze_068_gp,
  SBes_pinksplash_07_gp,
  SBes_vintage_01_gp,
  SBdeparture_gp,
  SBes_landscape_64_gp,
  SBes_landscape_33_gp,
  SBrainbowsherbet_gp,
  SBgr65_hult_gp,
  SBgr64_hult_gp,
  SBGMT_drywet_gp,
  SBib_jul01_gp,
  SBes_vintage_57_gp,
  SBib15_gp,
  SBFuschia_7_gp,
  SBes_emerald_dragon_08_gp,
  SBlava_gp,
  SBfire_gp,
  SBColorfull_gp,
  SBMagenta_Evening_gp,
  SBPink_Purple_gp,
  SBes_autumn_19_gp,
  SBBlacK_Blue_Magenta_White_gp,
  SBBlacK_Magenta_Red_gp,
  SBBlacK_Red_Magenta_Yellow_gp,
  SBBlue_Cyan_Yellow_gp };

// Count of how many cpt-city gradients are defined:
const uint8_t SBGradientPaletteCount = 
  sizeof( SBGradientPalettes) / sizeof( TProgmemRGBGradientPalettePtr );
// EOF Sidebars palette //
// EOF NEW PALETTES DEFS //

//// KEROSENE PALETTE
extern const TProgmemRGBGradientPalettePtr keroseneGradientPalettes[];
extern const uint8_t keroseneGradientPaletteCount;
uint8_t kerosenePaletteIndex = 0;
CRGBPalette16 keroseneCurrentPalette( CRGB::Black);
CRGBPalette16 keroseneTargetPalette( keroseneGradientPalettes[0] );
uint16_t       keroseneLowSin;                                                         // Adjustable midpoint/maximum brightness location of the animation.
float          keroseneGamma;                                                          // Used for tapering the top half of the flame.
uint8_t        keroseneMinBrightness;                                                  // Used to control minimum brightness for bottom half of flame.
bool           keroseneAutoPalette               = false;


//// RANDOMCOLOR PALETTE & DEFS
const uint8_t randomColorXYTable[] = {
     0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,
    47,  46,  45,  44,  43,  42,  41,  40,  39,  38,  37,  36,  35,  34,  33,  32,  31,  30,  29,  28,  27,  26,  25,  24,
    48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71,
    95,  94,  93,  92,  91,  90,  89,  88,  87,  86,  85,  84,  83,  82,  81,  80,  79,  78,  77,  76,  75,  74,  73,  72,
    96,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
   143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120,
   144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
   191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168
  };

//CRGBPalette16  randomColorPalette[27]            = {LavaColors_p, RainbowColors_p, ForestColors_p, OceanColors_p, HeatColors_p, PartyColors_p, CloudColors_p, barberpole1Colors_p, loversColors_p, opaqueColors_p, tempColors_p, recliningColors_p, rgb1Colors_p, pair11Colors_p, i8Colors_p, froth316Colors_p, shikon22Colors_p, shikon23Colors_p, haxbyColors_p, redgrey11Colors_p, precip217Colors_p, dkblueredColors_p, oldflagColors_p, xmascandyColors_p, rainfallColors_p, qventColors_p, LavaColors_p};
CRGBPalette16  randomColorPalette1, randomColorPalette2, randomColorPalette3;

//uint8_t        randomColorPaletteIndex           = 1;
//uint8_t        randomColorPaletteSize            = sizeof(randomColorPalette)/sizeof(randomColorPalette[0]);
// Global variables used by RandomColor controls.
uint16_t       randomColorLowSin;                                                         // Adjustable midpoint/maximum brightness location of the animation.
float          randomColorGamma;                                                          // Used for tapering the top half of the flame.
uint8_t        randomColorMinBrightness;                                                  // Used to control minimum brightness for bottom half of flame.
bool           randomColorAutoPalette            = true;

//////// COLORS DEFS & VARS ////////
#define        minFPS                             5
#define        maxFPS                             50
#define        stepFPS                            5
uint8_t        currentFPS                         = 30;              /* Refresh rate */
 
#define        minSaturation                      0
#define        maxSaturation                      1
#define        stepSaturation                     0.02
double         currentSaturation                  =1;

#define        minTrailHue                        0 // min =0, max = 1
#define        maxTrailHue                        1
#define        stepTrailHue                       0.02
int            intervalTrailHue                   = 500;
double         currentTrailHue                    = 0;
bool           trailAutoHue                       = false;
#define        minTrailDelay                      10
#define        maxTrailDelay                      500
#define        stepTrailDelay                     5
int            currentTrailDelay                  = 75;

#define               minPacifica1DDelay          1
#define               maxPacifica1DDelay          500
#define               stepPacifica1DDelay         1
int                   currentPacifica1DDelay      = 10;

CRGBPalette16 pacifica1D_palette_1 = 
    { 0x000507, 0x000409, 0x00030B, 0x00030D, 0x000210, 0x000212, 0x000114, 0x000117, 
      0x000019, 0x00001C, 0x000026, 0x000031, 0x00003B, 0x000046, 0x14554B, 0x28AA50 };
CRGBPalette16 pacifica1D_palette_2 = 
    { 0x000507, 0x000409, 0x00030B, 0x00030D, 0x000210, 0x000212, 0x000114, 0x000117, 
      0x000019, 0x00001C, 0x000026, 0x000031, 0x00003B, 0x000046, 0x0C5F52, 0x19BE5F };
CRGBPalette16 pacifica1D_palette_3 = 
    { 0x000208, 0x00030E, 0x000514, 0x00061A, 0x000820, 0x000927, 0x000B2D, 0x000C33, 
      0x000E39, 0x001040, 0x001450, 0x001860, 0x001C70, 0x002080, 0x1040BF, 0x2060FF };

// USE IN SOME EFFECTS //
#define WU_WEIGHT(a,b) ((uint8_t) (((a)*(b)+(a)+(b))>>8))


// LDIRKO's AURORA DEFS //
uint8_t auroraBrightness = 100U; // not used here

#define min_AURORA_COLOR_RANGE 0
#define max_AURORA_COLOR_RANGE 250
#define step_AURORA_COLOR_RANGE 10
uint8_t AURORA_COLOR_RANGE = 90; // (+/-10 hue units) the range in which the glow color floats relative to the selected hue 

#define minAuroraSpeed  0
#define maxAuroraSpeed  250
#define stepAuroraSpeed 10
uint8_t currentAuroraSpeed = 100; // 1-255

uint8_t auroraSpeed = currentAuroraSpeed;
uint8_t auroraScale = 38;        // 1-99 is color, 100 is shifting

#define WIDTH (kMatrixWidth)
#define HEIGHT (kMatrixHeight)

bool auroraRandom = false;
bool auroraLoadingFlag = true;
uint8_t auroraSelectedSettings = 1;

uint8_t auroraHue, auroraHue2;
uint8_t auroraDeltaHue, auroraDeltaHue2;
float auroraSpeedfactor;
float auroraEmitterX, auroraEmitterY;
uint16_t auroraFF_x, auroraFF_y, auroraFF_z;

extern const TProgmemRGBPalette16 WaterfallColors_p FL_PROGMEM = {0x000000, 0x060707, 0x101110, 0x151717, 0x1C1D22, 0x242A28, 0x363B3A, 0x313634, 0x505552, 0x6B6C70, 0x98A4A1, 0xC1C2C1, 0xCACECF, 0xCDDEDD, 0xDEDFE0, 0xB2BAB9};

const TProgmemRGBPalette16 *auroraPalette_arr[] = {
    &PartyColors_p,
    &OceanColors_p, 
    &LavaColors_p, 
    &HeatColors_p, 
    &WaterfallColors_p, 
    &CloudColors_p, 
    &ForestColors_p, 
    &RainbowColors_p, 
    &RainbowStripeColors_p};

const TProgmemRGBPalette16 *auroraCurPalette = auroraPalette_arr[0];
// EOF LDIRKO's AURORA DEFS //


// FIRE2 DEFS //
// This settings : regardless Fire2AutoPalette, Fire2Leds1 is activated / displayed first //
#define FIXED_FIRE2_SCALE_FOR_Y 4  // 1-11 is scale for Y axis

CRGB Fire2Leds1[NUM_LEDS];
CRGB Fire2Leds2[NUM_LEDS];
//CRGB Fire2LedsTest[NUM_LEDS];

int Fire2BlendAmount = 0;
int Fire2BlendSteps = 5;
bool Fire2Swap = false;

bool Fire2AutoPalette = true;
bool Fire2FirstLoad = true;
uint8_t Fire2Scale;
uint8_t Fire2Speed;
uint8_t Fire2PaletteIndex;

uint8_t Fire2Speed1 = 150;       // 1-252 ...why is not 255?!
uint8_t Fire2Scale1 = 9;         // 1-99 is palette and scale for X axis
uint8_t Fire2PaletteIndex1;
bool Fire2Loading1 = true;
uint8_t Fire2DeltaValue1;
uint8_t Fire2DeltaHue1;
uint8_t Fire2Step1;
uint8_t Fire2_pcnt1;
uint16_t Fire2_ff_x1, Fire2_ff_z1;

uint8_t Fire2Speed2 = 150;       // 1-252 ...why is not 255?!
uint8_t Fire2Scale2 = 9;         // 1-99 is palette and scale for X axis
uint8_t Fire2PaletteIndex2;
bool Fire2Loading2 = true;
uint8_t Fire2DeltaValue2;
uint8_t Fire2DeltaHue2;
uint8_t Fire2Step2;
uint8_t Fire2_pcnt2;
uint16_t Fire2_ff_x2, Fire2_ff_z2;

extern const TProgmemRGBPalette16 WoodFireColors_p FL_PROGMEM = {CRGB::Black, 0x330e00, 0x661c00, 0x992900, 0xcc3700, CRGB::OrangeRed, 0xff5800, 0xff6b00, 0xff7f00, 0xff9200, CRGB::Orange, 0xffaf00, 0xffb900, 0xffc300, 0xffcd00, CRGB::Gold};             //* Orange
extern const TProgmemRGBPalette16 NormalFire_p FL_PROGMEM = {CRGB::Black, 0x330000, 0x660000, 0x990000, 0xcc0000, CRGB::Red, 0xff0c00, 0xff1800, 0xff2400, 0xff3000, 0xff3c00, 0xff4800, 0xff5400, 0xff6000, 0xff6c00, 0xff7800};                             // пытаюсь сделать что-то более приличное
extern const TProgmemRGBPalette16 NormalFire2_p FL_PROGMEM = {CRGB::Black, 0x560000, 0x6b0000, 0x820000, 0x9a0011, CRGB::FireBrick, 0xc22520, 0xd12a1c, 0xe12f17, 0xf0350f, 0xff3c00, 0xff6400, 0xff8300, 0xffa000, 0xffba00, 0xffd400};                      // пытаюсь сделать что-то более приличное
extern const TProgmemRGBPalette16 LithiumFireColors_p FL_PROGMEM = {CRGB::Black, 0x240707, 0x470e0e, 0x6b1414, 0x8e1b1b, CRGB::FireBrick, 0xc14244, 0xd16166, 0xe08187, 0xf0a0a9, CRGB::Pink, 0xff9ec0, 0xff7bb5, 0xff59a9, 0xff369e, CRGB::DeepPink};        //* Red
extern const TProgmemRGBPalette16 SodiumFireColors_p FL_PROGMEM = {CRGB::Black, 0x332100, 0x664200, 0x996300, 0xcc8400, CRGB::Orange, 0xffaf00, 0xffb900, 0xffc300, 0xffcd00, CRGB::Gold, 0xf8cd06, 0xf0c30d, 0xe9b913, 0xe1af1a, CRGB::Goldenrod};           //* Yellow
extern const TProgmemRGBPalette16 CopperFireColors_p FL_PROGMEM = {CRGB::Black, 0x001a00, 0x003300, 0x004d00, 0x006600, CRGB::Green, 0x239909, 0x45b313, 0x68cc1c, 0x8ae626, CRGB::GreenYellow, 0x94f530, 0x7ceb30, 0x63e131, 0x4bd731, CRGB::LimeGreen};     //* Green
extern const TProgmemRGBPalette16 AlcoholFireColors_p FL_PROGMEM = {CRGB::Black, 0x000033, 0x000066, 0x000099, 0x0000cc, CRGB::Blue, 0x0026ff, 0x004cff, 0x0073ff, 0x0099ff, CRGB::DeepSkyBlue, 0x1bc2fe, 0x36c5fd, 0x51c8fc, 0x6ccbfb, CRGB::LightSkyBlue};  //* Blue
extern const TProgmemRGBPalette16 RubidiumFireColors_p FL_PROGMEM = {CRGB::Black, 0x0f001a, 0x1e0034, 0x2d004e, 0x3c0068, CRGB::Indigo, CRGB::Indigo, CRGB::Indigo, CRGB::Indigo, CRGB::Indigo, CRGB::Indigo, 0x3c0084, 0x2d0086, 0x1e0087, 0x0f0089, CRGB::DarkBlue};        //* Indigo
extern const TProgmemRGBPalette16 PotassiumFireColors_p FL_PROGMEM = {CRGB::Black, 0x0f001a, 0x1e0034, 0x2d004e, 0x3c0068, CRGB::Indigo, 0x591694, 0x682da6, 0x7643b7, 0x855ac9, CRGB::MediumPurple, 0xa95ecd, 0xbe4bbe, 0xd439b0, 0xe926a1, CRGB::DeepPink}; //* Violet

const TProgmemRGBPalette16 *Fire2Palette[] = 
{
    &PartyColors_p,
    &OceanColors_p, 
    &LavaColors_p, 
    &HeatColors_p, 
    &WaterfallColors_p, 
    &CloudColors_p, 
    &ForestColors_p, 
    &RainbowColors_p, 
    &RainbowStripeColors_p,
    
    &WoodFireColors_p,
    &NormalFire_p,
    &NormalFire2_p,
    &LithiumFireColors_p,
    &SodiumFireColors_p,
    &CopperFireColors_p,
    &AlcoholFireColors_p,
    &RubidiumFireColors_p,
    &PotassiumFireColors_p
};

const TProgmemRGBPalette16 *currentFire2Palette1 = Fire2Palette[0];
const TProgmemRGBPalette16 *currentFire2Palette2 = Fire2Palette[0];
// EOF FIRE2 DEFS //


// ---- LDIRKO's BOIL DEFS ---- //
#define minBoilScale  0
#define maxBoilScale  100
#define stepBoilScale 1
uint8_t currentBoilScale = 16; // 1-100

uint8_t boilSpeed = 255;       // not used here
bool boilRandom = false;
uint8_t boilBrightness = 100U; // not used here
uint8_t boilScale = currentBoilScale;        // 1-100 palette and size
bool boilLoadingFlag = true;
uint8_t boilSelectedSettings = 1;
uint8_t boilDeltaValue;
uint8_t boilHue, boilHue2;
uint16_t boilFF_x, boilFF_y, boilFF_z;

const TProgmemRGBPalette16 *boilPalette_arr[] = {
    &PartyColors_p,
    &OceanColors_p, 
    &LavaColors_p, 
    &HeatColors_p, 
    &WaterfallColors_p, 
    &CloudColors_p, 
    &ForestColors_p, 
    &RainbowColors_p, 
    &RainbowStripeColors_p};

const TProgmemRGBPalette16 *boilCurPalette = boilPalette_arr[0];



// -- LDIRKO's WFALL DEFS -- //
#define minWFallVar2  20
#define maxWFallVar2  200
#define stepWFallVar2 10
uint8_t currentWFallVar2 = 30; 

#define minWFallScale  0
#define maxWFallScale  254
#define stepWFallScale  1
uint8_t currentWFallScale = 50; 

bool wfallRandom = false;
uint8_t wfallBrightness = 255U; // not used here
uint8_t wfallSpeed = 255;       // not used here
uint8_t wfallScale = currentWFallScale;        // 1-100 is color

uint8_t wfallSelectedSettings = 1;

#define WFALL_NUM_LAYERSMAX 2
uint8_t wfallNoise3d[WFALL_NUM_LAYERSMAX][kMatrixWidth][kMatrixHeight];
// ---- EOF LDIRKO's BOIL DEFS ---- //


// -- LDIRKO'S RUBIK DEFS -- //
#define minRubikScale 1
#define maxRubikScale 24
#define stepRubikScale 1
uint8_t currentRubikScale = 5;

#define minRubikDelay   0
#define maxRubikDelay   500
#define stepRubikDelay  10
uint16_t currentRubikDelay = 90;

bool rubikRandom = false;
bool rubikLoadingFlag = true;
uint8_t rubikBrightness = 60U;                  // not used here
uint8_t rubikSpeed = 2U;                        // odd or even only
uint8_t rubikScale = currentRubikScale;         // 1-100 is palette and size [ OK : 5, 7]
uint8_t rubikSelectedSettings = 1;
uint8_t rubikStep;
uint8_t rubikDeltaHue, rubikDeltaHue2;
uint8_t rubikHue, rubikHue2;
uint8_t rubikDeltaValue;

#define RUBIK_NUM_LAYERSMAX 2
uint8_t rubikNoise3d[RUBIK_NUM_LAYERSMAX][kMatrixWidth][kMatrixHeight];

const TProgmemRGBPalette16 *rubikPalette_arr[] = {
    &PartyColors_p,
    &OceanColors_p, 
    &LavaColors_p, 
    &HeatColors_p, 
    &WaterfallColors_p, 
    &CloudColors_p, 
    &ForestColors_p, 
    &RainbowColors_p, 
    &RainbowStripeColors_p};

const TProgmemRGBPalette16 *rubikCurPalette = rubikPalette_arr[0];

// -- EOF LDIRKO'S RUBIK DEFS -- //


// -- LDIRKO'S LAVA1 DEFS -- //
#define minLava1Scale 1U
#define maxLava1Scale 100U
#define stepLava1Scale 1U
uint8_t currentLava1Scale = 1U;

#define minLava1Speed 1U
#define maxLava1Speed 255U
#define stepLava1Speed 1U
uint8_t currentLava1Speed = 240U;

uint8_t lava1Brightness = 255U;              // not used here
uint8_t lava1Scale = currentLava1Scale;       // 2-100, 1 is shifting
uint8_t lava1Speed = currentLava1Speed;       // 1-255

bool lava1Random = false;
bool lava1LoadingFlag = true;
uint8_t lava1SelectedSettings = 1;

uint8_t lava1Hue, lava1Hue2;
#define LAVA1_NUM_LAYERSMAX 2
uint8_t lava1Noise3d[LAVA1_NUM_LAYERSMAX][kMatrixWidth][kMatrixHeight];

#define trackingOBJECT_MAX_COUNT                         (100U)
float   trackingObjectPosX[trackingOBJECT_MAX_COUNT];
float   trackingObjectPosY[trackingOBJECT_MAX_COUNT];
float   trackingObjectSpeedX[trackingOBJECT_MAX_COUNT];
float   trackingObjectSpeedY[trackingOBJECT_MAX_COUNT];
float   trackingObjectShift[trackingOBJECT_MAX_COUNT];
uint8_t trackingObjectHue[trackingOBJECT_MAX_COUNT];
uint8_t trackingObjectState[trackingOBJECT_MAX_COUNT];
bool    trackingObjectIsShift[trackingOBJECT_MAX_COUNT];
#define enlargedOBJECT_MAX_COUNT                     (kMatrixWidth * 2)
uint8_t enlargedObjectNUM;
long    enlargedObjectTime[enlargedOBJECT_MAX_COUNT];
// -- EOF LDIRKO'S LAVA DEFS -- //


// ROTATE LAMP DEFS //
uint8_t rotateLampSpeedMult = 20;
bool rotateLampAutoHue  = false;
#define        minRotateLampHue                           0 // min =0, max = 1
#define        maxRotateLampHue                           254
#define        stepRotateLampAutoHue                      2
#define        stepRotateLampHue                          2
double         currentRotateLampHue                       = 0;
int            intervalRotateLampHue                      = 200;

CRGBPalette16 rotateLampPalette = {
  0xFF0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
  0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000
};

// EOF ROTATE LAMP DEFS //


// RADFIRE DEFS //
#define kHalfWidth        (kMatrixWidth / 2)
#define kHalfHeight       (kMatrixHeight / 2) - 2

#define minRadFireDelay      1
#define maxRadFireDelay      200
#define stepRadFireDelay     1
int currentRadFireDelay = 30;

#define minRadFireHue         0
#define maxRadFireHue         254
#define stepRadFireAutoHue    2
#define stepRadFireHue        2
double currentRadFireHue      = 0;
int intervalRadFireHue        = 700;
bool radFireAutoHue           = false;
uint8_t radFirePalNum         = 1;

float radFireAngle[kMatrixWidth][kMatrixHeight];
float radFireRadius[kMatrixWidth][kMatrixHeight];

CRGBPalette16 radFirePalette = HeatColors_p;
// EOF RADFIRE DEFS //


// BARBERPOLE1 DEFS //
#define minBP1Delay    5
#define maxBP1Delay    200
#define stepBP1Delay   1
uint8_t currentBP1Delay = 30;
uint8_t bp1Rotate = 0;

#define minBP1Hue         0
#define maxBP1Hue         254
#define stepBP1AutoHue    2
#define stepBP1Hue        2
double currentBP1Hue      = 0;
int intervalBP1Hue        = 700;
bool bp1AutoHue           = false;
// EOF BARBERPOLE DEFS //


// BARBERPOLE2 DEFS //
#define bp2Size 6
#define bp2Count 26
uint16_t bp2Loop = 0;
#define minBP2Delay    5
#define maxBP2Delay    200
#define stepBP2Delay   1
uint8_t currentBP2Delay = 30;

#define minBP2Hue         0
#define maxBP2Hue         254
#define stepBP2AutoHue    2
#define stepBP2Hue        2
double currentBP2Hue      = 0;
int intervalBP2Hue        = 700;
bool bp2AutoHue           = false;

const uint8_t bp2XYTable[] = {
    23,  22,  21,  20,  19,  18,  17,  16,  15,  14,  13,  12,  11,  10,   9,   8,   7,   6,   5,   4,   3,   2,   1,   0,
    47,  46,  45,  44,  43,  42,  41,  40,  39,  38,  37,  36,  35,  34,  33,  32,  31,  30,  29,  28,  27,  26,  25,  24,
    71,  70,  69,  68,  67,  66,  65,  64,  63,  62,  61,  60,  59,  58,  57,  56,  55,  54,  53,  52,  51,  50,  49,  48,
    95,  94,  93,  92,  91,  90,  89,  88,  87,  86,  85,  84,  83,  82,  81,  80,  79,  78,  77,  76,  75,  74,  73,  72,
   119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100,  99,  98,  97,  96,
   143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120,
   167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144,
   191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168
  };
// EOF BARBERPOLE2 DEFS //


// BARBERPOLE3 DEFS //
#define bp3Size 6
#define bp3Count 25
uint16_t bp3Loop = 0;
#define minBP3Delay    5
#define maxBP3Delay    200
#define stepBP3Delay   1
uint8_t currentBP3Delay = 30;

#define minBP3Hue         0
#define maxBP3Hue         254
#define stepBP3AutoHue    2
#define stepBP3Hue        2
double currentBP3Hue      = 0;
int intervalBP3Hue        = 700;
bool bp3AutoHue           = false;

const uint8_t bp3XYTable[] = {
    23,  22,  21,  20,  19,  18,  17,  16,  15,  14,  13,  12,  11,  10,   9,   8,   7,   6,   5,   4,   3,   2,   1,   0,
    47,  46,  45,  44,  43,  42,  41,  40,  39,  38,  37,  36,  35,  34,  33,  32,  31,  30,  29,  28,  27,  26,  25,  24,
    71,  70,  69,  68,  67,  66,  65,  64,  63,  62,  61,  60,  59,  58,  57,  56,  55,  54,  53,  52,  51,  50,  49,  48,
    95,  94,  93,  92,  91,  90,  89,  88,  87,  86,  85,  84,  83,  82,  81,  80,  79,  78,  77,  76,  75,  74,  73,  72,
   119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100,  99,  98,  97,  96,
   143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120,
   167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144,
   191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168
  };
// EOF BARBERPOLE3 DEFS //


// LAVALAMP2 DEFS //
#define minLava2Hue         0
#define maxLava2Hue         254
#define stepLava2AutoHue    2
#define stepLava2Hue        2
double currentLava2Hue      = 0;
bool lava2AutoHue           = false;
int intervalLava2Hue        = 3000;

DEFINE_GRADIENT_PALETTE(lava2Pal) { // define fire palette
  0,  0,  0,  0, //black
  32,  255,  0,  0, // red
  190,  255,  20,  0, //yellow
  255,  0,  0,  0 // black
};

//uint8_t lava2Speed = currentLava2Speed;
uint8_t lava2Intensity = 70;
uint8_t lava2FFT1 = 248;
uint8_t lava2FFT2 = 100;
uint8_t lava2FFT3 = 170;
// EOF LAVALAMP2 DEFS //


// LAVALAMP3 DEFS //
#define lava3Regime 1
bool lava3Sending, lava3SendDirection;
bool lava3Loading = true;
byte lava3SelX, lava3SelY;
int lava3PosY[kMatrixWidth];

#define minLava3Speed  0
#define maxLava3Speed  20
#define stepLava3Speed 1
byte currentLava3Speed = 5;

#define minLava3Hue         0
#define maxLava3Hue         254
#define stepLava3AutoHue    2
#define stepLava3Hue        2
double currentLava3Hue      = 0;
bool lava3AutoHue           = false;
int intervalLava3Hue        = 3000;

CRGB lava3Color = CHSV(150, 255, 255);


#define minLava3Delay       1
#define maxLava3Delay       100
#define stepLava3Delay      1
int currentLava3Delay       = 10;
// EOF LAVALAMP3 DEFS //

// DRAWBARS DEFS //
CRGB dBarsLeds1[NUM_LEDS];
CRGB dBarsLeds2[NUM_LEDS];
int dBarsBlendAmount = 0;
int dBarsBlendSteps = 5;
bool dBarsSwap = false;

#define dBars_ROT 0
#if(dBars_ROT)
#define dBars_Array kMatrixHeight
#else
#define dBars_Array kMatrixWidth
#endif

byte dBars1Val[dBars_Array];
byte dBars1Min[dBars_Array];
byte dBars1Max[dBars_Array];
byte dBars1Col[dBars_Array];
byte dBars1Speed[dBars_Array];
bool dBars1Setup = true;

byte dBars2Val[dBars_Array];
byte dBars2Min[dBars_Array];
byte dBars2Max[dBars_Array];
byte dBars2Col[dBars_Array];
byte dBars2Speed[dBars_Array];
bool dBars2Setup = true;

#define minDBarsHue 0
#define maxDBarsHue 254
#define stepDBarsHue 2
uint8_t currentDBarsHue = 0;
bool dBarsAutoHue = true;
//EOF DRAWBARS DEFS //

// HYP DEFS //
#define HYP_SECONDS_PER_HUE 10
bool hypAutoHue = false;
#define minHypHue   0
#define maxHypHue   250
#define stepHypHue  10
uint8_t currentHypHue = 0;

static const uint8_t exp_gamma[256] = 
{
0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   1,   1,
1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
1,   2,   2,   2,   2,   2,   2,   2,   2,   2,   3,   3,   3,   3,   3,
4,   4,   4,   4,   4,   5,   5,   5,   5,   5,   6,   6,   6,   7,   7,
7,   7,   8,   8,   8,   9,   9,   9,   10,  10,  10,  11,  11,  12,  12,
12,  13,  13,  14,  14,  14,  15,  15,  16,  16,  17,  17,  18,  18,  19,
19,  20,  20,  21,  21,  22,  23,  23,  24,  24,  25,  26,  26,  27,  28,
28,  29,  30,  30,  31,  32,  32,  33,  34,  35,  35,  36,  37,  38,  39,
39,  40,  41,  42,  43,  44,  44,  45,  46,  47,  48,  49,  50,  51,  52,
53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,  67,
68,  70,  71,  72,  73,  74,  75,  77,  78,  79,  80,  82,  83,  84,  85,
87,  89,  91,  92,  93,  95,  96,  98,  99,  100, 101, 102, 105, 106, 108,
109, 111, 112, 114, 115, 117, 118, 120, 121, 123, 125, 126, 128, 130, 131,
133, 135, 136, 138, 140, 142, 143, 145, 147, 149, 151, 152, 154, 156, 158,
160, 162, 164, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187,
190, 192, 194, 196, 198, 200, 202, 204, 207, 209, 211, 213, 216, 218, 220,
222, 225, 227, 229, 232, 234, 236, 239, 241, 244, 246, 249, 251, 253, 254,
255};
// EOF HYP DEFS //


// COLORWAVES DEFS //
#define CW_SECONDS_PER_PALETTE 10
bool cwAutoPalette = false;
extern const TProgmemRGBGradientPalettePtr cwGradientPalettes[];
extern const uint8_t cwGradientPaletteCount;
uint8_t cwCurrentPaletteNumber = 0;
CRGBPalette16 cwCurrentPalette( CRGB::Black);
CRGBPalette16 cwTargetPalette( cwGradientPalettes[0] );
// EOF COLORWAVES DEFS //


// SUPERNOVA DEFS //
#define        minsnovaHue                           0 // min =0, max = 1
#define        maxsnovaHue                           254
#define        stepsnovaHue                          2
bool           snovaAutoHue                          = false;
double         currentsnovaHue                       = 0;

#define        minsnovaSpeed                         1
#define        maxsnovaSpeed                         40
#define        stepsnovaSpeed                        1
double         currentsnovaSpeed                     = 10;


bool snovaLoading = true;
uint8_t snovaHueValue, snovaHueValue2;
uint8_t snovaStep;
uint8_t snovaDeltaValue;
#define snovaMAX_COUNT (254U)
float   snova_PosX[snovaMAX_COUNT];
float   snova_PosY[snovaMAX_COUNT];
float   snova_SpeedX[snovaMAX_COUNT];
float   snova_SpeedY[snovaMAX_COUNT];
uint8_t snovaHueArr[snovaMAX_COUNT];
uint8_t snovaState[snovaMAX_COUNT];
bool    snovaIsShift[snovaMAX_COUNT];
#define snova_enlargedOBJECT_MAX_COUNT (kMatrixWidth * 2)
uint8_t snovaEnlargedObjectNUM;
long    snova_enlargedObjectTime[snova_enlargedOBJECT_MAX_COUNT];
const uint8_t snova_CENTER_X_MINOR =  (kMatrixWidth / 2) -  ((kMatrixWidth - 1) & 0x01);
const uint8_t snova_CENTER_Y_MINOR =  (kMatrixHeight / 2) - ((kMatrixHeight - 1) & 0x01);
const uint8_t snova_CENTER_X_MAJOR =  kMatrixWidth / 2  + (kMatrixWidth % 2);
const uint8_t snova_CENTER_Y_MAJOR =  kMatrixHeight / 2  + (kMatrixHeight % 2);
// EOF SUPERNOVA DEFS //

#define        minPPlasmaDelay                    1
#define        maxPPlasmaDelay                    40
#define        stepPPlasmaDelay                   1
int            currentPPlasmaDelay                = 1;

#define        minEasingHue                       0
#define        maxEasingHue                       254
#define        stepEasingHue                      2
float          currentEasingHue                   = 0;
#define        minIntervalEasingHue               1
#define        maxIntervalEasingHue               40
int            intervalEasingHue                  = 20;
int            counterEasingHue                   = 0;
#define        minEasingDelay                     6
#define        maxEasingDelay                     100
#define        stepEasingDelay                    1
int            currentEasingDelay                 = 11;

int            aaBarF16pos                        = 0; // position of the "fraction-based bar"
int            aaBarF16delta                      = 1; // how many 16ths of a pixel to move the Fractional Bar
uint16_t       aaBarFhue16                        = 0; // color for Fractional Bar
int            aaBarWidth                         = 4; // width of each light bar, in whole pixels
#define        minAABarFrameDelay                 1
#define        maxAABarFrameDelay                 40
#define        stepAABarFrameDelay                1
int            AABarFrameDelay                    = 10; //ms

#define        minNFireDelay                      1
#define        maxNFireDelay                      100
#define        stepNFireDelay                     1
int            currentNFireDelay                  = 10;              /* Refresh rate */
#define        minNFireHue                        0
#define        maxNFireHue                        254
#define        stepNFireHue                       2
int            intervalNFireHue                   = 200;
double         currentNFireHue                    = 0;
bool           nfireAutoHue                       = false;

#define        minFlameDelay                      1
#define        maxFlameDelay                      100
#define        stepFlameDelay                     1
int            currentFlameDelay                  = 10;              /* Refresh rate */
#define        minFlameHue                        0
#define        maxFlameHue                        254
#define        stepFlameHue                       2
int            intervalFlameHue                   = 200;
double         currentFlameHue                    = 0;
bool           flameAutoHue                       = false;

#define        minPaintDelay                      1
#define        maxPaintDelay                      100
#define        stepPaintDelay                     1
int            currentPaintDelay                  = 30;              /* Refresh rate */
#define        minPaintHue                        0
#define        maxPaintHue                        254
#define        stepPaintHue                       2
int            intervalPaintHue                   = 200;
double         currentPaintHue                    = 0;
bool           paintAutoHue                       = false; 

#define        minSmokeDelay                      1
#define        maxSmokeDelay                      100
#define        stepSmokeDelay                     1
int            currentSmokeDelay                  = 30;              /* Refresh rate */
#define        minSmokeHue                        0
#define        maxSmokeHue                        254
#define        stepSmokeHue                       2
int            intervalSmokeHue                   = 200;
double         currentSmokeHue                    = 0;
bool           smokeAutoHue                       = false; 

#define        minStarDelay                       1
#define        maxStarDelay                       100
#define        stepStarDelay                      1
int            currentStarDelay                   = 30;              /* Refresh rate */
#define        minStarHue                         0
#define        maxStarHue                         254
#define        stepStarHue                        2
int            intervalStarHue                    = 200;
double         currentStarHue                     = 0;
bool           starAutoHue                        = false;

#define        minSpinnerDelay                    1
#define        maxSpinnerDelay                    100
#define        stepSpinnerDelay                   1
int            currentSpinnerDelay                = 30;              /* Refresh rate */
#define        minSpinnerHue                      0
#define        maxSpinnerHue                      254
#define        stepSpinnerHue                     2
int            intervalSpinnerHue                 = 200;
uint8_t        currentSpinnerHue                  = 0;
bool           spinnerAutoHue                     = false;

#define        minCBHue                           0 // min =0, max = 1
#define        maxCBHue                           254
#define        stepCBHue                          2
int            intervalCBHue                      = 500;
double         currentCBHue                       = 0;
bool           CBAutoHue                          = false;

bool           SBAutoPalette                      = true;
extern const TProgmemRGBGradientPalettePtr SBPalette[];
extern const uint8_t SBGradientPaletteCount;
uint8_t SBPaletteIndex = 0;
CRGBPalette16 SBCurrentPalette( CRGB::Black);
CRGBPalette16 SBTargetPalette( SBGradientPalettes[0] );

#define        minPurpleBarsHue                   0 // min =0, max = 1
#define        maxPurpleBarsHue                   254
#define        stepPurpleBarsHue                  2
int            intervalPurpleBarsHue              = 500;
double         currentPurpleBarsHue               = 0;
bool           purpleBarsAutoHue                  = false;

#define        minSolidHue                        0 // min =0, max = 179
#define        maxSolidHue                        254
#define        stepSolidHue                       2
double         currentSolidHue                    = 0;


// PARTICLES DEFS //
//const byte     numParticlesFlame                  = 15;
const byte     numParticlesFlame                  = 85;
ParticleSysConfig gFlame(kMatrixWidth, kMatrixHeight);
Particle_Std particlesFlame[numParticlesFlame];
Particle_Fixed sourceFlame;
Emitter_Fountain2 emitterFlame(0, 0, 5, &sourceFlame);
ParticleSys pSysFlame(&gFlame, numParticlesFlame, particlesFlame, &emitterFlame);
FastLEDRenderer rendererFlame(&gFlame);

const byte     numParticlesPaint                 = 20;
ParticleSysConfig gPaint(kMatrixWidth, kMatrixHeight);
Particle_Fixed particlesPaint[numParticlesPaint];
Particle_Attractor sourcePaint(gPaint.center_x, gPaint.center_y);
Emitter_Fountain3 emitterPaint(0, 5, 2, &sourcePaint);
ParticleSys pSysPaint(&gPaint, numParticlesPaint, particlesPaint, &emitterPaint);
FastLEDRenderer rendererPaint(&gPaint);

const byte    numParticlesSmoke                   = 30;
ParticleSysConfig gSmoke(kMatrixWidth, kMatrixHeight);
Particle_Std2 particlesSmoke[numParticlesSmoke];
Particle_Attractor sourceSmoke(gSmoke.center_x, gSmoke.center_y);
Emitter_Fountain4 emitterSmoke(0, 0, 5, &sourceSmoke);
ParticleSys pSysSmoke(&gSmoke, numParticlesSmoke, particlesSmoke, &emitterSmoke);
FastLEDRenderer rendererSmoke(&gSmoke);

const byte    numParticlesStar                    = 30;
ParticleSysConfig gStar(kMatrixWidth, kMatrixHeight);
Particle_Std3 particlesStar[numParticlesStar];
Particle_Fixed sourceStar(gStar.center_x, gStar.center_y);
Emitter_Fountain5 emitterStar(8, &sourceStar);
ParticleSys pSysStar(&gStar, numParticlesStar, particlesStar, &emitterStar);
FastLEDRenderer rendererStar(&gStar);

const byte     numParticlesSpinner                = 30;
ParticleSysConfig gSpinner(kMatrixWidth, kMatrixHeight);
Particle_Std4 particlesSpinner[numParticlesSpinner];
Emitter_Spin2 emitterSpinner(&gSpinner, 8, 5);
ParticleSys pSysSpinner(&gSpinner, numParticlesSpinner, particlesSpinner, &emitterSpinner);
FastLEDRenderer rendererSpinner(&gSpinner);

// NEXUS DEFS //
#define nexusEntity (kMatrixWidth)
#define nexusBG 0
uint16_t nexusSpeed = 50;

#define minNexusScale 0
#define maxNexusScale 250
#define stepNexusScale 10
uint8_t currentNexusScale = 10;

bool nexusLoading = true;

#define minNexusDelay 0
#define maxNexusDelay 100
#define stepNexusDelay 1
uint16_t currentNexusDelay = 10;
bool nexusAutoPalette = true;

uint8_t nexusPaletteIndex = 0;
//uint8_t nexusPaletteMax = 2;
CRGBPalette16 nexusCurrentPalette( CRGB::Black);
CRGBPalette16 nexusTargetPalette( RainbowColors_p );
// EOF NEXUS DEFS //


#endif
